{"version":3,"file":"js/590.a59ad763.js","mappings":"+KACOA,GAAG,mB,0CAARC,EAAAA,EAAAA,IAAgC,MAAhCC,E,6HAMF,GACEC,UACEC,KAAKC,MACP,EACAC,QAAS,CACPD,OACE,IAAIE,EAAS,IAAIC,EAAAA,EAAc,kBAAmB,CAAEC,gBAAiBD,EAAAA,MACjEA,EAAAA,EAAAA,oCAEFD,EAAOG,gBAAkBC,OAAOC,kBAElCL,EAAOM,MAAMC,kBAAkBC,KAAKC,SAAU,EAC9CT,EAAOM,MAAMI,WAAWC,IAAIV,EAAAA,KAE5B,IAAIK,EAAQN,EAAOM,MAEfM,EAAiB,IAAIX,EAAAA,EAAsB,CAC7CY,OAAQZ,EAAAA,EAAAA,aAA+B,MAAO,OAC9Ca,OAAQ,IACRC,aAAcd,EAAAA,EAAAA,kBAEZe,EAAW,IAAIf,EAAAA,EAAwB,CACzCgB,SAAUL,IAEZN,EAAMI,WAAWC,IACf,IAAIV,EAAAA,EAAuB,CACzBiB,kBAAmBF,EACnBG,WAAY,IAAIlB,EAAAA,EAA0B,CACxCmB,SAAU,IAAInB,EAAAA,EAAgB,CAC5BoB,aAAa,EACbC,OAAQ,CACNC,SAAU,CACRC,MAAO,IAAIvB,EAAAA,EAAa,EAAK,EAAK,GAClCwB,OAAQ,GACRC,QAAS,IAEXC,OAAQ,krDA2ClB3B,EAAO4B,OAAOC,oBACZ5B,EAAAA,EAAAA,eAAqCW,GAAgBkB,eAEzD,I,QClFJ,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://webgis/./src/components/public/radar_scan.vue","webpack://webgis/./src/components/public/radar_scan.vue?39d3"],"sourcesContent":["<template>\r\n  <div id=\"cesiumContainer\"></div>\r\n</template>\r\n\r\n<script>\r\nimport 'cesium/Build/Cesium/Widgets/widgets.css'\r\nimport * as Cesium from 'cesium'\r\nexport default {\r\n  mounted() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    init() {\r\n      var viewer = new Cesium.Viewer('cesiumContainer', { terrainProvider: Cesium.createWorldTerrain() })\r\n      if (Cesium.FeatureDetection.supportsImageRenderingPixelated()) {\r\n        //判断是否支持图像渲染像素化处理\r\n        viewer.resolutionScale = window.devicePixelRatio\r\n      }\r\n      viewer.scene.postProcessStages.fxaa.enabled = true\r\n      viewer.scene.primitives.add(Cesium.createOsmBuildings());\r\n      // Create the scene.\r\n      var scene = viewer.scene\r\n      // Create the circle geometry.\r\n      var circleGeometry = new Cesium.CircleGeometry({\r\n        center: Cesium.Cartesian3.fromDegrees(-74.02, 40.69),\r\n        radius: 200.0,\r\n        vertexFormat: Cesium.VertexFormat.POSITION_AND_ST,\r\n      })\r\n      var instance = new Cesium.GeometryInstance({\r\n        geometry: circleGeometry,\r\n      })\r\n      scene.primitives.add(\r\n        new Cesium.GroundPrimitive({\r\n          geometryInstances: instance,\r\n          appearance: new Cesium.MaterialAppearance({\r\n            material: new Cesium.Material({\r\n              translucent: false,\r\n              fabric: {\r\n                uniforms: {\r\n                  color: new Cesium.Color(0.0, 1.0, 0.0),\r\n                  rotate: 90.0,\r\n                  percent: 0.1,\r\n                },\r\n                source: `\r\n                  uniform vec4 color;\r\n                  uniform float percent;\r\n                  \r\n                  float get_angle(vec2 base,vec2 dir)\r\n                  { \r\n                    base = normalize(base);\r\n                    dir = normalize(dir);\r\n                    float angle = degrees(acos(abs(dot(dir,base))));\r\n                    if (dir.s > 0.0 && dir.t > 0.0){angle = angle;}\r\n                    else if (dir.s < 0.0 && dir.t > 0.0){angle = 180.0 - angle;}\r\n                    else if (dir.s < 0.0 && dir.t < 0.0){angle = 180.0 + angle;}\r\n                    else{angle = 360.0 - angle;}\r\n                    return angle;\r\n                  }\r\n\r\n                  czm_material czm_getMaterial(czm_materialInput materialInput)\r\n                  {\r\n                    czm_material material = czm_getDefaultMaterial(materialInput);\r\n                    material.diffuse = czm_gammaCorrect(color.rgb); \r\n\r\n                    vec2 st = materialInput.st;\r\n                    vec2 base = vec2(0.5,0.0);\r\n                    vec2 dir = st-vec2(0.5,0.5);\r\n                    float len = length(dir);\r\n                    if(len > 0.49){\r\n                      material.alpha = 1.0;\r\n                      material.diffuse = vec3(1.0,1.0,0.0);\r\n                      material.emission=vec3(0.2);\r\n                    }\r\n                    else{\r\n                      float angle = get_angle(base,dir);\r\n                      material.alpha = (mod(angle + (-czm_frameNumber),360.0)-(1.0-percent)*360.0)/(360.0*percent);\r\n                      material.emission=vec3(0.5);\r\n                    } \r\n                    return material;\r\n                  }\r\n                  `,\r\n              },\r\n            }),\r\n          }),\r\n        })\r\n      )\r\n      viewer.camera.flyToBoundingSphere(\r\n        Cesium.CircleGeometry.createGeometry(circleGeometry).boundingSphere\r\n      )\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#cesiumContainer {\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n</style>\r\n","import { render } from \"./radar_scan.vue?vue&type=template&id=11cb8776&scoped=true\"\nimport script from \"./radar_scan.vue?vue&type=script&lang=js\"\nexport * from \"./radar_scan.vue?vue&type=script&lang=js\"\n\nimport \"./radar_scan.vue?vue&type=style&index=0&id=11cb8776&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\Documents\\\\GitHub\\\\webgis\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-11cb8776\"]])\n\nexport default __exports__"],"names":["id","_createElementBlock","_hoisted_1","mounted","this","init","methods","viewer","Cesium","terrainProvider","resolutionScale","window","devicePixelRatio","scene","postProcessStages","fxaa","enabled","primitives","add","circleGeometry","center","radius","vertexFormat","instance","geometry","geometryInstances","appearance","material","translucent","fabric","uniforms","color","rotate","percent","source","camera","flyToBoundingSphere","boundingSphere","__exports__","render"],"sourceRoot":""}