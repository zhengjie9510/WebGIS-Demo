{"version":3,"file":"js/8258.e224b1c3.js","mappings":"iLACOA,GAAG,mB,0CAARC,EAAAA,EAAAA,IAAgC,MAAhCC,E,sIAOF,MAAMC,EACJC,YAAYC,GACVC,KAAKC,MAAQ,IAAIC,EAAAA,EAAwB,WACzCF,KAAKG,kBAAoB,GACzBH,KAAKI,iBAAcC,EACnBL,KAAKM,aAAUD,CACjB,CAKAE,WAAWC,GACJR,KAAKM,UACRN,KAAKM,QAAU,IAAIJ,EAAAA,EAA+BM,EAAOC,MAAMC,SAGjEV,KAAKM,QAAQK,gBAAgBC,IAC3B,MAAMC,EAAgBb,KAAKc,YAAYN,EAAQI,EAAMG,UACrD,GAAIb,EAAAA,EAAeW,GAAgB,CACjC,GAAsC,IAAlCb,KAAKG,kBAAkBa,OAAc,CACvChB,KAAKG,kBAAkBc,KAAKJ,GAC5B,MAAMK,EAAmB,IAAIhB,EAAAA,GAAwB,IAC5C,IAAIA,EAAAA,EAAwBF,KAAKG,qBACvC,GACHH,KAAKI,YAAcJ,KAAKmB,YAAYD,EACtC,CACAlB,KAAKG,kBAAkBc,KAAKJ,EAC9B,IACCX,EAAAA,EAAAA,YAEHF,KAAKM,QAAQK,gBAAgBS,IAC3B,GAAIpB,KAAKG,kBAAkBa,QAAU,EAAG,CACtC,MAAMH,EAAgBb,KAAKc,YAAYN,EAAQY,EAAKC,aAChDnB,EAAAA,EAAeW,KACjBb,KAAKG,kBAAkBmB,MACvBtB,KAAKG,kBAAkBc,KAAKJ,GAEhC,IACCX,EAAAA,EAAAA,YAEHF,KAAKM,QAAQK,gBAAgBC,IAC3BZ,KAAKG,kBAAkBmB,MACvBtB,KAAKC,MAAMsB,SAASC,OAAOxB,KAAKI,aAChCJ,KAAKmB,YAAYnB,KAAKG,mBACtBH,KAAKG,kBAAoB,EAAC,GACzBD,EAAAA,EAAAA,YACL,CAOAY,YAAYN,EAAQO,GAClB,IAAIF,EAEJ,GAAIL,EAAOiB,2BAA2BvB,EAAAA,EACpCW,EAAgBL,EAAOC,MAAMiB,OAAOC,cAAcZ,OAG/C,CACH,MAAMa,EAAMpB,EAAOkB,OAAOG,WAAWd,GACrCF,EAAgBL,EAAOC,MAAMqB,MAAMC,KAAKH,EAAKpB,EAAOC,MACtD,CACA,OAAOI,CACT,CAKAM,YAAYa,GACV,OAAOhC,KAAKC,MAAMsB,SAASU,IAAI,CAC7BC,QAAS,CACPC,UAAWH,EACXI,SAAU,IAAIlC,EAAAA,EACZA,EAAAA,EAAAA,MAAAA,UAA6B,OAIrC,CAKAmC,SAAS7B,GACPA,EAAO8B,YAAYL,IAAIjC,KAAKC,MAC9B,EAEF,OACEsC,UACEvC,KAAKwC,MACP,EACAC,QAAS,CACPD,OACE,MAAMhC,EAAS,IAAIN,EAAAA,EAAc,mBAC7BA,EAAAA,EAAAA,oCAEFM,EAAOkC,gBAAkBC,OAAOC,kBAElCpC,EAAOC,MAAMoC,kBAAkBC,KAAKC,SAAU,EAC9CvC,EAAOC,MAAMuC,0BAA2B,EAExC,MAAMC,EAAe,IAAIpD,EACzBoD,EAAa1C,WAAWC,GACxByC,EAAaZ,SAAS7B,EACxB,I,WC1GJ,MAAM0C,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://webgis/./src/components/public/draw_polygon.vue","webpack://webgis/./src/components/public/draw_polygon.vue?969d"],"sourcesContent":["<template>\r\n  <div id=\"cesiumContainer\"></div>\r\n</template>\r\n\r\n<script>\r\nimport 'cesium/Build/Cesium/Widgets/widgets.css'\r\nimport * as Cesium from 'cesium'\r\n\r\nclass DrawPolygons {\r\n  constructor(options) {\r\n    this.layer = new Cesium.CustomDataSource('MyLines')\r\n    this.activeShapePoints = []\r\n    this.activeShape = undefined\r\n    this.handler = undefined\r\n  }\r\n  /**\r\n   * 添加鼠标点击事件\r\n   * @param {Cesium.Viewer} viewer 目标地图\r\n   */\r\n  bindAction(viewer) {\r\n    if (!this.handler) {\r\n      this.handler = new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);\r\n    }\r\n    // 鼠标左键单击画点\r\n    this.handler.setInputAction((click) => {\r\n      const earthPosition = this.getPosition(viewer, click.position)\r\n      if (Cesium.defined(earthPosition)) {\r\n        if (this.activeShapePoints.length === 0) {\r\n          this.activeShapePoints.push(earthPosition)\r\n          const dynamicPositions = new Cesium.CallbackProperty(() => {\r\n            return new Cesium.PolygonHierarchy(this.activeShapePoints);\r\n          }, false);\r\n          this.activeShape = this.drawPolygon(dynamicPositions)\r\n        }\r\n        this.activeShapePoints.push(earthPosition)\r\n      }\r\n    }, Cesium.ScreenSpaceEventType.LEFT_CLICK)\r\n    // 鼠标移动\r\n    this.handler.setInputAction((move) => {\r\n      if (this.activeShapePoints.length >= 2) {\r\n        const earthPosition = this.getPosition(viewer, move.endPosition)\r\n        if (Cesium.defined(earthPosition)) {\r\n          this.activeShapePoints.pop()\r\n          this.activeShapePoints.push(earthPosition)\r\n        }\r\n      }\r\n    }, Cesium.ScreenSpaceEventType.MOUSE_MOVE)\r\n    // 单击鼠标右键结束画面\r\n    this.handler.setInputAction((click) => {\r\n      this.activeShapePoints.pop();\r\n      this.layer.entities.remove(this.activeShape)\r\n      this.drawPolygon(this.activeShapePoints)\r\n      this.activeShapePoints = []\r\n    }, Cesium.ScreenSpaceEventType.RIGHT_CLICK)\r\n  }\r\n  /**\r\n   * 添加鼠标点击事件的位置\r\n   * @param {Cesium.Viewer} viewer 目标地图\r\n   * @param {Cesium.Cartesian2} position 鼠标位置\r\n   * @return {Cesium.Cartesian3} 鼠标点击位置的坐标\r\n   */\r\n  getPosition(viewer, position) {\r\n    let earthPosition = undefined\r\n    // 球面\r\n    if (viewer.terrainProvider instanceof Cesium.EllipsoidTerrainProvider) {\r\n      earthPosition = viewer.scene.camera.pickEllipsoid(position);\r\n    }\r\n    // 地形\r\n    else {\r\n      const ray = viewer.camera.getPickRay(position);\r\n      earthPosition = viewer.scene.globe.pick(ray, viewer.scene);\r\n    }\r\n    return earthPosition\r\n  }\r\n  /**\r\n   * 画面\r\n   * @param {array<Cesium.Cartesian3>} positionData 面边界坐标\r\n   */\r\n  drawPolygon(positionData) {\r\n    return this.layer.entities.add({\r\n      polygon: {\r\n        hierarchy: positionData,\r\n        material: new Cesium.ColorMaterialProperty(\r\n          Cesium.Color.WHITE.withAlpha(0.7)\r\n        ),\r\n      },\r\n    });\r\n  }\r\n  /**\r\n   * 添加图层\r\n   * @param {Cesium.Viewer} viewer 目标地图\r\n   */\r\n  addToMap(viewer) {\r\n    viewer.dataSources.add(this.layer);\r\n  }\r\n}\r\nexport default {\r\n  mounted() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    init() {\r\n      const viewer = new Cesium.Viewer('cesiumContainer')\r\n      if (Cesium.FeatureDetection.supportsImageRenderingPixelated()) {\r\n        //判断是否支持图像渲染像素化处理\r\n        viewer.resolutionScale = window.devicePixelRatio\r\n      }\r\n      viewer.scene.postProcessStages.fxaa.enabled = true\r\n      viewer.scene.debugShowFramesPerSecond = true // 显示帧率\r\n\r\n      const drawPolygons = new DrawPolygons()\r\n      drawPolygons.bindAction(viewer)\r\n      drawPolygons.addToMap(viewer)\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#cesiumContainer {\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n</style>\r\n","import { render } from \"./draw_polygon.vue?vue&type=template&id=29f61b6e&scoped=true\"\nimport script from \"./draw_polygon.vue?vue&type=script&lang=js\"\nexport * from \"./draw_polygon.vue?vue&type=script&lang=js\"\n\nimport \"./draw_polygon.vue?vue&type=style&index=0&id=29f61b6e&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\Documents\\\\GitHub\\\\webgis\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-29f61b6e\"]])\n\nexport default __exports__"],"names":["id","_createElementBlock","_hoisted_1","DrawPolygons","constructor","options","this","layer","Cesium","activeShapePoints","activeShape","undefined","handler","bindAction","viewer","scene","canvas","setInputAction","click","earthPosition","getPosition","position","length","push","dynamicPositions","drawPolygon","move","endPosition","pop","entities","remove","terrainProvider","camera","pickEllipsoid","ray","getPickRay","globe","pick","positionData","add","polygon","hierarchy","material","addToMap","dataSources","mounted","init","methods","resolutionScale","window","devicePixelRatio","postProcessStages","fxaa","enabled","debugShowFramesPerSecond","drawPolygons","__exports__","render"],"sourceRoot":""}