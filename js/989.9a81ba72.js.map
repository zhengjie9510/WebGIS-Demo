{"version":3,"file":"js/989.9a81ba72.js","mappings":"+KACOA,GAAG,mB,0CAARC,EAAAA,EAAAA,IAAgC,MAAhCC,E,6HAMF,GACEC,UACEC,KAAKC,MACP,EACAC,QAAS,CACPD,OACE,IAAIE,EAAS,IAAIC,EAAAA,EAAc,kBAAmB,CAAEC,gBAAiBD,EAAAA,MACjEA,EAAAA,EAAAA,oCAEFD,EAAOG,gBAAkBC,OAAOC,kBAElCL,EAAOM,MAAMC,kBAAkBC,KAAKC,SAAU,EAC9CT,EAAOM,MAAMI,WAAWC,IAAIV,EAAAA,KAE5B,MAAMW,EAAuB,usBAwB7B,IAAIC,EAAiB,IAAIZ,EAAAA,EAAsB,CAC7Ca,OAAQb,EAAAA,EAAAA,aAA+B,MAAO,OAC9Cc,OAAQ,IACRC,aAAcf,EAAAA,EAAAA,kBAEZgB,EAAW,IAAIhB,EAAAA,EAAwB,CACzCiB,SAAUL,IAEZ,MAAMM,EAAa,IAAIlB,EAAAA,EAA0B,CAC/CmB,SAAU,IAAInB,EAAAA,EAAgB,CAC5BoB,aAAa,EACbC,OAAQ,CACNC,SAAU,CACRC,MAAO,IAAIvB,EAAAA,EAAa,EAAK,EAAK,GAClCwB,QAAS,IACTC,OAAQ,GAEVC,OAAQf,OAId,IAAIgB,EAAY5B,EAAOM,MAAMI,WAAWC,IACtC,IAAIV,EAAAA,EAAuB,CACzB4B,kBAAmBZ,EACnBE,WAAYA,KAGhBnB,EAAOM,MAAMwB,UAAUC,kBAAiB,WACtC,IAAIL,EAASE,EAAUT,WAAWC,SAASG,SAASG,OACpDA,GAAU,KACVE,EAAUT,WAAWC,SAASG,SAASG,OAASA,CAClD,IACA1B,EAAOgC,OAAOC,oBACZhC,EAAAA,EAAAA,eAAqCY,GAAgBqB,eAEzD,I,QCzEJ,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://webgis/./src/components/public/corrugated_circle.vue","webpack://webgis/./src/components/public/corrugated_circle.vue?eae9"],"sourcesContent":["<template>\r\n  <div id=\"cesiumContainer\"></div>\r\n</template>\r\n\r\n<script>\r\nimport 'cesium/Build/Cesium/Widgets/widgets.css'\r\nimport * as Cesium from 'cesium'\r\nexport default {\r\n  mounted() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    init() {\r\n      var viewer = new Cesium.Viewer('cesiumContainer', { terrainProvider: Cesium.createWorldTerrain() })\r\n      if (Cesium.FeatureDetection.supportsImageRenderingPixelated()) {\r\n        //判断是否支持图像渲染像素化处理\r\n        viewer.resolutionScale = window.devicePixelRatio\r\n      }\r\n      viewer.scene.postProcessStages.fxaa.enabled = true\r\n      viewer.scene.primitives.add(Cesium.createOsmBuildings());\r\n\r\n      const fragmentShaderSource = `\r\n        uniform vec4 color;\r\n        uniform float percent;\r\n        uniform float offset;\r\n        czm_material czm_getMaterial(czm_materialInput materialInput)\r\n        {\r\n          czm_material material = czm_getDefaultMaterial(materialInput);\r\n          material.diffuse = czm_gammaCorrect(color.rgb); \r\n          vec2 st = materialInput.st;\r\n          float s = distance(st,vec2(0.5,0.5));\r\n          float a = s-mod(offset,0.5);\r\n          float l = 0.5*percent;\r\n          if(a < l && a > 0.0){\r\n              material.alpha = a/l;\r\n          }\r\n          else{\r\n              material.alpha = 0.0;\r\n          }\r\n          material.emission=vec3(0.5);\r\n          return material;\r\n        } \r\n      `\r\n\r\n      // Create the circle geometry.\r\n      var circleGeometry = new Cesium.CircleGeometry({\r\n        center: Cesium.Cartesian3.fromDegrees(-74.02, 40.69),\r\n        radius: 200.0,\r\n        vertexFormat: Cesium.VertexFormat.POSITION_AND_ST,\r\n      })\r\n      var instance = new Cesium.GeometryInstance({\r\n        geometry: circleGeometry,\r\n      })\r\n      const appearance = new Cesium.MaterialAppearance({\r\n        material: new Cesium.Material({\r\n          translucent: false,\r\n          fabric: {\r\n            uniforms: {\r\n              color: new Cesium.Color(0.0, 1.0, 0.0),\r\n              percent: 0.05,\r\n              offset: 0.0,\r\n            },\r\n            source: fragmentShaderSource\r\n          },\r\n        }),\r\n      })\r\n      var primitive = viewer.scene.primitives.add(\r\n        new Cesium.GroundPrimitive({\r\n          geometryInstances: instance,\r\n          appearance: appearance\r\n        })\r\n      )\r\n      viewer.scene.preUpdate.addEventListener(function () {\r\n        var offset = primitive.appearance.material.uniforms.offset\r\n        offset += 0.005\r\n        primitive.appearance.material.uniforms.offset = offset\r\n      })\r\n      viewer.camera.flyToBoundingSphere(\r\n        Cesium.CircleGeometry.createGeometry(circleGeometry).boundingSphere\r\n      )\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#cesiumContainer {\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n</style>\r\n","import { render } from \"./corrugated_circle.vue?vue&type=template&id=13357b44&scoped=true\"\nimport script from \"./corrugated_circle.vue?vue&type=script&lang=js\"\nexport * from \"./corrugated_circle.vue?vue&type=script&lang=js\"\n\nimport \"./corrugated_circle.vue?vue&type=style&index=0&id=13357b44&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\Documents\\\\GitHub\\\\webgis\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-13357b44\"]])\n\nexport default __exports__"],"names":["id","_createElementBlock","_hoisted_1","mounted","this","init","methods","viewer","Cesium","terrainProvider","resolutionScale","window","devicePixelRatio","scene","postProcessStages","fxaa","enabled","primitives","add","fragmentShaderSource","circleGeometry","center","radius","vertexFormat","instance","geometry","appearance","material","translucent","fabric","uniforms","color","percent","offset","source","primitive","geometryInstances","preUpdate","addEventListener","camera","flyToBoundingSphere","boundingSphere","__exports__","render"],"sourceRoot":""}