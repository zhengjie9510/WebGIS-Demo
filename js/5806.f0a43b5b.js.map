{"version":3,"file":"js/5806.f0a43b5b.js","mappings":"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","sources":["webpack://webgis/./src/components/public/skybox_change.vue","webpack://webgis/./src/components/public/plugins/skybox.js","webpack://webgis/./src/components/public/skybox_change.vue?b26a"],"sourcesContent":["<template>\n  <div id=\"cesiumContainer\"></div>\n  <div class=\"skybox\">\n    <el-button type=\"primary\" size=\"small\" v-for=\"(value,key) in skyBoxConfig\"\n               :key=\"key\"\n               @click=\"toggleSkybox(key)\">{{key}}\n    </el-button>\n  </div>\n</template>\n\n<script>\nimport 'cesium/Build/Cesium/Widgets/widgets.css'\nimport * as Cesium from 'cesium'\n\nimport SkyBox from '@/components/public/plugins/skybox'\n\nlet currentSkybox\nlet defaultSkybox\nexport default {\n  data(){\n    return {\n      skyBoxConfig : {\n        '默认':undefined,\n        '蓝天':{\n          positiveX:'../../../skybox/lantian/Right.jpg',\n          negativeX:'../../../skybox/lantian/Left.jpg',\n          positiveY:'../../../skybox/lantian/Front.jpg',\n          negativeY:'../../../skybox/lantian/Back.jpg',\n          positiveZ:'../../../skybox/lantian/Up.jpg',\n          negativeZ:'../../../skybox/lantian/Down.jpg',\n        },\n        '晚霞':{\n          positiveX:'../../../skybox/wanxia/SunSetRight.png',\n          negativeX:'../../../skybox/wanxia/SunSetLeft.png',\n          positiveY:'../../../skybox/wanxia/SunSetFront.png',\n          negativeY:'../../../skybox/wanxia/SunSetBack.png',\n          positiveZ:'../../../skybox/wanxia/SunSetUp.png',\n          negativeZ:'../../../skybox/wanxia/SunSetDown.png',\n        },\n        '晴天':{\n          positiveX:'../../../skybox/qingtian/rightav9.jpg',\n          negativeX:'../../../skybox/qingtian/leftav9.jpg',\n          positiveY:'../../../skybox/qingtian/frontav9.jpg',\n          negativeY:'../../../skybox/qingtian/backav9.jpg',\n          positiveZ:'../../../skybox/qingtian/topav9.jpg',\n          negativeZ:'../../../skybox/qingtian/bottomav9.jpg',\n        }\n      }\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  methods: {\n    init() {\n      const viewer = new Cesium.Viewer('cesiumContainer')\n      if (Cesium.FeatureDetection.supportsImageRenderingPixelated()) {\n        //判断是否支持图像渲染像素化处理\n        viewer.resolutionScale = window.devicePixelRatio\n      }\n      viewer.scene.postProcessStages.fxaa.enabled = true\n      currentSkybox = viewer.scene.skyBox\n\n      viewer.scene.preUpdate.addEventListener(() => {\n        //获取相机高度\n        let position = viewer.scene.camera.position;\n        let cameraHeight = Cesium.Cartographic.fromCartesian(position).height;\n        if (cameraHeight < 240000) {\n          viewer.scene.skyBox = currentSkybox\n          viewer.scene.skyAtmosphere.show = currentSkybox === defaultSkybox;\n        } else {\n          viewer.scene.skyBox = defaultSkybox;\n          viewer.scene.skyAtmosphere.show = true;\n        }\n      })\n      currentSkybox = defaultSkybox\n\n      this.viewer = viewer\n    },\n\n    toggleSkybox(name) {\n      if (this.viewer) {\n        if (name === '默认') {\n          currentSkybox = defaultSkybox\n        }\n        else {\n          currentSkybox = new SkyBox({\n            sources: this.skyBoxConfig[name],\n            nearGround:true\n          })\n        }\n      }\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n#cesiumContainer {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n}\n.skybox {\n  position: absolute;\n  top:5px;\n  left: 5px;\n  height: 30px;\n  border-radius: 3px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n}\n</style>\n","import * as Cesium from 'cesium'\nconst BoxGeometry = Cesium.BoxGeometry;\nconst Cartesian3 = Cesium.Cartesian3;\nconst defaultValue = Cesium.defaultValue;\nconst defined = Cesium.defined;\nconst destroyObject = Cesium.destroyObject;\nconst DeveloperError = Cesium.DeveloperError;\nconst GeometryPipeline = Cesium.GeometryPipeline;\nconst Matrix3 = Cesium.Matrix3;\nconst Matrix4 = Cesium.Matrix4;\nconst Transforms = Cesium.Transforms;\nconst VertexFormat = Cesium.VertexFormat;\nconst BufferUsage = Cesium.BufferUsage;\nconst CubeMap = Cesium.CubeMap;\nconst DrawCommand = Cesium.DrawCommand;\nconst loadCubeMap = Cesium.loadCubeMap;\nconst RenderState = Cesium.RenderState;\nconst VertexArray = Cesium.VertexArray;\nconst BlendingState = Cesium.BlendingState;\nconst SceneMode = Cesium.SceneMode;\nconst ShaderProgram = Cesium.ShaderProgram;\nconst ShaderSource = Cesium.ShaderSource;\n//片元着色器，直接从源码复制\nconst SkyBoxFS = `#version 300 es\nprecision mediump float;\n\nuniform samplerCube u_cubeMap;\nin vec3 v_texCoord;\nout vec4 fragColor;\n\nvoid main()\n{\n    vec4 color = texture(u_cubeMap, normalize(v_texCoord));\n    fragColor = vec4(czm_gammaCorrect(color).rgb, czm_morphTime);\n}\n`;\n//顶点着色器有修改，主要是乘了一个旋转矩阵\nconst SkyBoxVS = `#version 300 es\nin vec3 position;\nout vec3 v_texCoord;\n\nuniform mat3 u_rotateMatrix;\n\nvoid main()\n{\n    vec3 p = czm_viewRotation * u_rotateMatrix * (czm_temeToPseudoFixed * (czm_entireFrustum.y * position));\n    gl_Position = czm_projection * vec4(p, 1.0);\n    v_texCoord = position.xyz;\n}\n`;\n\n /**\n * A sky box around the scene to draw stars.  The sky box is defined using the True Equator Mean Equinox (TEME) axes.\n * <p>\n * This is only supported in 3D.  The sky box is faded out when morphing to 2D or Columbus view.  The size of\n * the sky box must not exceed {@link Scene#maximumCubeMapSize}.\n * </p>\n *\n * @alias SkyBox\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Object} [options.sources] The source URL or <code>Image</code> object for each of the six cube map faces.  See the example below.\n * @param {Boolean} [options.show=true] Determines if this primitive will be shown.\n *\n *\n * @example\n * scene.skyBox = new Cesium.SkyBox({\n *   sources : {\n *     positiveX : 'skybox_px.png',\n *     negativeX : 'skybox_nx.png',\n *     positiveY : 'skybox_py.png',\n *     negativeY : 'skybox_ny.png',\n *     positiveZ : 'skybox_pz.png',\n *     negativeZ : 'skybox_nz.png'\n *   }\n * });\n *\n * @see Scene#skyBox\n * @see Transforms.computeTemeToPseudoFixedMatrix\n */\nfunction SkyBox(options) {\n    /**\n     * The sources used to create the cube map faces: an object\n     * with <code>positiveX</code>, <code>negativeX</code>, <code>positiveY</code>,\n     * <code>negativeY</code>, <code>positiveZ</code>, and <code>negativeZ</code> properties.\n     * These can be either URLs or <code>Image</code> objects.\n     *\n     * @type Object\n     * @default undefined\n     */\n    this.sources = options.sources;\n    this._sources = undefined;\n    /**\n     * 是否开启近地模式\n     */\n    this.nearGround = options.nearGround;\n    /**\n     * Determines if the sky box will be shown.\n     *\n     * @type {Boolean}\n     * @default true\n     */\n    this.show = defaultValue(options.show, true);\n\n    this._command = new DrawCommand({\n        modelMatrix: Matrix4.clone(Matrix4.IDENTITY),\n        owner: this,\n    });\n    this._cubeMap = undefined;\n\n    this._attributeLocations = undefined;\n    this._useHdr = undefined;\n}\n\n/**\n * Called when {@link Viewer} or {@link CesiumWidget} render the scene to\n * get the draw commands needed to render this primitive.\n * <p>\n * Do not call this function directly.  This is documented just to\n * list the exceptions that may be propagated when the scene is rendered:\n * </p>\n *\n * @exception {DeveloperError} this.sources is required and must have positiveX, negativeX, positiveY, negativeY, positiveZ, and negativeZ properties.\n * @exception {DeveloperError} this.sources properties must all be the same type.\n */\nSkyBox.prototype.update = function (frameState, useHdr) {\n    const that = this;\n\n    if (!this.show) {\n        return undefined;\n    }\n\n    if (\n        frameState.mode !== SceneMode.SCENE3D &&\n        frameState.mode !== SceneMode.MORPHING\n    ) {\n        return undefined;\n    }\n\n    // The sky box is only rendered during the render pass; it is not pickable, it doesn't cast shadows, etc.\n    if (!frameState.passes.render) {\n        return undefined;\n    }\n\n    const context = frameState.context;\n\n    if (this._sources !== this.sources) {\n        this._sources = this.sources;\n        const sources = this.sources;\n\n        //>>includeStart('debug', pragmas.debug);\n        if (\n            !defined(sources.positiveX) ||\n            !defined(sources.negativeX) ||\n            !defined(sources.positiveY) ||\n            !defined(sources.negativeY) ||\n            !defined(sources.positiveZ) ||\n            !defined(sources.negativeZ)\n        ) {\n            throw new DeveloperError(\n                \"this.sources is required and must have positiveX, negativeX, positiveY, negativeY, positiveZ, and negativeZ properties.\"\n            );\n        }\n\n        if (\n            typeof sources.positiveX !== typeof sources.negativeX ||\n            typeof sources.positiveX !== typeof sources.positiveY ||\n            typeof sources.positiveX !== typeof sources.negativeY ||\n            typeof sources.positiveX !== typeof sources.positiveZ ||\n            typeof sources.positiveX !== typeof sources.negativeZ\n        ) {\n            throw new DeveloperError(\n                \"this.sources properties must all be the same type.\"\n            );\n        }\n        //>>includeEnd('debug');\n\n        if (typeof sources.positiveX === \"string\") {\n            // Given urls for cube-map images.  Load them.\n            loadCubeMap(context, this._sources).then(function (cubeMap) {\n                that._cubeMap = that._cubeMap && that._cubeMap.destroy();\n                that._cubeMap = cubeMap;\n            });\n        } else {\n            this._cubeMap = this._cubeMap && this._cubeMap.destroy();\n            this._cubeMap = new CubeMap({\n                context: context,\n                source: sources,\n            });\n        }\n    }\n\n    const command = this._command;\n\n    if (!defined(command.vertexArray)) {\n        command.uniformMap = {\n            u_cubeMap: function () {\n                return that._cubeMap;\n            },\n            u_rotateMatrix: function () {\n                return that.nearGround ? (command.modelMatrix = Transforms.eastNorthUpToFixedFrame(frameState.camera._positionWC),\n                    Matrix4.getMatrix3(command.modelMatrix, new Matrix3)) : Matrix3.IDENTITY;\n            }\n        };\n\n        const geometry = BoxGeometry.createGeometry(\n            BoxGeometry.fromDimensions({\n                dimensions: new Cartesian3(2.0, 2.0, 2.0),\n                vertexFormat: VertexFormat.POSITION_ONLY,\n            })\n        );\n        const attributeLocations = (this._attributeLocations = GeometryPipeline.createAttributeLocations(\n            geometry\n        ));\n\n        command.vertexArray = VertexArray.fromGeometry({\n            context: context,\n            geometry: geometry,\n            attributeLocations: attributeLocations,\n            bufferUsage: BufferUsage.STATIC_DRAW,\n        });\n\n        command.renderState = RenderState.fromCache({\n            blending: BlendingState.ALPHA_BLEND,\n        });\n    }\n\n    if (!defined(command.shaderProgram) || this._useHdr !== useHdr) {\n        const fs = new ShaderSource({\n            defines: [useHdr ? \"HDR\" : \"\"],\n            sources: [SkyBoxFS],\n        });\n        command.shaderProgram = ShaderProgram.fromCache({\n            context: context,\n            vertexShaderSource: SkyBoxVS,\n            fragmentShaderSource: fs,\n            attributeLocations: this._attributeLocations,\n        });\n        this._useHdr = useHdr;\n    }\n\n    if (!defined(this._cubeMap)) {\n        return undefined;\n    }\n\n    return command;\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see SkyBox#destroy\n */\nSkyBox.prototype.isDestroyed = function () {\n    return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * skyBox = skyBox && skyBox.destroy();\n *\n * @see SkyBox#isDestroyed\n */\nSkyBox.prototype.destroy = function () {\n    const command = this._command;\n    command.vertexArray = command.vertexArray && command.vertexArray.destroy();\n    command.shaderProgram =\n        command.shaderProgram && command.shaderProgram.destroy();\n    this._cubeMap = this._cubeMap && this._cubeMap.destroy();\n    return destroyObject(this);\n};\nexport default SkyBox;\n\n","import { render } from \"./skybox_change.vue?vue&type=template&id=73c100c4&scoped=true\"\nimport script from \"./skybox_change.vue?vue&type=script&lang=js\"\nexport * from \"./skybox_change.vue?vue&type=script&lang=js\"\n\nimport \"./skybox_change.vue?vue&type=style&index=0&id=73c100c4&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/zhengjie/Documents/webgis/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-73c100c4\"]])\n\nexport default __exports__"],"names":["_createElementVNode","id","class","_hoisted_1","_hoisted_2","_createElementBlock","_Fragment","$data","value","key","_createBlock","_component_el_button","type","size","onClick","$options","BoxGeometry","Cesium","Cartesian3","defaultValue","defined","destroyObject","DeveloperError","GeometryPipeline","Matrix3","Matrix4","Transforms","VertexFormat","BufferUsage","CubeMap","DrawCommand","loadCubeMap","RenderState","VertexArray","BlendingState","SceneMode","ShaderProgram","ShaderSource","SkyBoxFS","SkyBoxVS","SkyBox","options","this","sources","_sources","undefined","nearGround","show","_command","modelMatrix","clone","IDENTITY","owner","_cubeMap","_attributeLocations","_useHdr","prototype","update","frameState","useHdr","that","mode","SCENE3D","MORPHING","passes","render","context","positiveX","negativeX","positiveY","negativeY","positiveZ","negativeZ","then","cubeMap","destroy","source","command","vertexArray","uniformMap","u_cubeMap","u_rotateMatrix","eastNorthUpToFixedFrame","camera","_positionWC","getMatrix3","geometry","createGeometry","fromDimensions","dimensions","vertexFormat","POSITION_ONLY","attributeLocations","createAttributeLocations","fromGeometry","bufferUsage","STATIC_DRAW","renderState","fromCache","blending","ALPHA_BLEND","shaderProgram","fs","defines","vertexShaderSource","fragmentShaderSource","isDestroyed","currentSkybox","defaultSkybox","data","skyBoxConfig","mounted","init","methods","viewer","resolutionScale","window","devicePixelRatio","scene","postProcessStages","fxaa","enabled","skyBox","preUpdate","addEventListener","position","cameraHeight","height","skyAtmosphere","toggleSkybox","name","__exports__"],"sourceRoot":""}