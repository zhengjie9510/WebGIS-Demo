"use strict";(self["webpackChunkwebgis"]=self["webpackChunkwebgis"]||[]).push([[2465],{52465:function(e,n,t){t.r(n),t.d(n,{default:function(){return M}});var r=t(73396);const o={id:"cesiumContainer"};function a(e,n,t,a,i,s){return(0,r.wg)(),(0,r.iD)("div",o)}var i=t(91478),s=t(40985),m=t(38703),c=t(60031),d=t(24959),l=t(80993),u=t(121),f=t(67584),h=t(40617),v=t(98482),p=t(70805),w=t(21155),C=(t(63408),t(14590),t(57658),t(23802)),Z=t(51625),_=t(86337),g=t(78393),x=t(25100),E=t(85363),y=t(54117),b=t(87133),T=t(12815),A=t(61562),I=t(53127),P=t(3541),S=t(5099),D=t(67090),F=t(17991),R=t(82766),z=t(33350),L=t(88002);class k{constructor(e,n,t){this.framebuffer=t,this.context=n,this.width=n.canvas.width;var r=[.5,.5,0],o=[-.5,.5,0],a=[-.5,-.5,0],i=[.5,-.5,0],s=[...r,...o,...a,...i],m=new Float64Array(s),d=[0,-1,0],l=new Float32Array([...d,...d,...d,...d]),u=new Float32Array([1,1,0,1,0,0,1,0]),f=new Uint16Array([0,1,2,0,2,3]),h=void 0,v="./favicon.ico";C.Z.createIfNeeded(v).fetchImage().then((function(e){var t;t=Z.Z(e.internalFormat)?new c.Z({context:n,pixelFormat:e.internalFormat,width:e.width,height:e.height,source:{arrayBufferView:e.bufferView}}):new c.Z({context:n,source:e}),h=t}));var p={position:0,normal:1,textureCoordinates:2},w="\n        in vec3 position;\n        in vec3 normal;\n        in vec2 st;\n        in float batchId;\n\n        out vec3 v_positionEC;\n        out vec3 v_normalEC;\n        out vec2 v_st;\n\n        void main(){\n            v_positionEC = (czm_modelView * vec4(position, 1.0)).xyz;\n            v_normalEC = czm_normal * normal;\n            v_st = st;\n            gl_Position = czm_modelViewProjection * vec4(position, 1.0);\n        }\n        ",L="\n        in vec3 v_positionEC;\n        in vec3 v_normalEC;\n        in vec2 v_st;\n        uniform sampler2D myImage;\n        in vec3 v_normal;\n        out vec4 fragColor;\n        void main(){\n            vec3 positionToEyeEC = -v_positionEC;\n            vec3 normalEC = normalize(v_normalEC);\n            #ifdef FACE_FORWARD\n                normalEC = faceforward(normalEC, vec3(0.0, 0.0, 1.0), -normalEC);\n            #endif\n\n            czm_materialInput materialInput;\n            materialInput.normalEC = normalEC;\n            materialInput.positionToEyeEC = positionToEyeEC;\n            materialInput.st = v_st;\n\n            //An czm_material with default values. \n            //Every material's czm_getMaterial should use this default material as a base for the material it returns. \n            //The default normal value is given by materialInput.normalEC.\n            czm_material material = czm_getDefaultMaterial(materialInput);\n            material.diffuse = texture(myImage, materialInput.st).rgb;\n\n            // #ifdef FLAT\n                fragColor = vec4(material.diffuse + material.emission, material.alpha);  //vec4(normalEC.xyz,1.);\n            // #else\n            //     fragColor = czm_phong(normalize(positionToEyeEC), material);\n            // #endif\n        }\n        ";function k(e){var n=new _.Z({attributes:{position:new g.Z({componentDatatype:x.Z.FLOAT,componentsPerAttribute:3,values:m}),normal:new g.Z({componentDatatype:x.Z.FLOAT,componentsPerAttribute:3,values:l}),textureCoordinates:new g.Z({componentDatatype:x.Z.FLOAT,componentsPerAttribute:2,values:u})},indices:f,primitiveType:E.Z.TRIANGLES,boundingSphere:y.Z.fromVertices(m)}),t=b.Z.fromGeometry({context:e,geometry:n,attributeLocations:p,bufferUsage:T.Z.STATIC_DRAW});return t}function N(n){var t=!1,r=!0,o=A.Z.getDefaultRenderState(t,r,void 0),a=I.Z.fromCache(o),i=new P.Z({sources:[w]}),s=new P.Z({sources:[L]}),m={myImage:function(){return Z.Z(h)?h:n.defaultTexture}},c=S.Z.fromCache({context:n,vertexShaderSource:i,fragmentShaderSource:s,attributeLocations:p});return new D.Z({vertexArray:k(n),primitiveType:E.Z.TRIANGLES,renderState:a,shaderProgram:c,uniformMap:m,owner:this,framebuffer:this.framebuffer?this.framebuffer:void 0,pass:F.Z.OPAQUE,modelMatrix:e})}function O(e){return new R.Z({pass:F.Z.OPAQUE,color:new z.Z(0,0,0,0),framebuffer:this.framebuffer,depth:1})}this.show=!0,this._command=void 0,this._createCommand=N,this._cCommand=void 0,this._createClearCommand=O}update(e){this.show&&(!Z.Z(this._cCommand)&&this.framebuffer&&(this._cCommand=this._createClearCommand()),Z.Z(this._cCommand)&&e.commandList.push(this._cCommand),Z.Z(this._command)||(this._command=this._createCommand(e.context)),this._command=this._createCommand(e.context),Z.Z(this._command)&&e.commandList.push(this._command))}isDestroyed(){return!1}destroy(){return Z.Z(this._command)&&(this._command.shaderProgram=this._command.shaderProgram&&this._command.shaderProgram.destroy()),L.Z(this)}}var N=k,O={data(){return{path:"/webgis-demo/"}},mounted(){this.init()},methods:{init(){const e=new i.Z("cesiumContainer");s.Z.supportsImageRenderingPixelated()&&(e.resolutionScale=window.devicePixelRatio),e.scene.postProcessStages.fxaa.enabled=!0,e.scene.debugShowFramesPerSecond=!0;const n=e.scene,t=n.context,r=new m.Z({context:t,colorTextures:[new c.Z({context:t,width:t.canvas.width*window.devicePixelRatio,height:t.canvas.height*window.devicePixelRatio})],depthStencilRenderbuffer:new d.Z({context:t,width:t.canvas.width*window.devicePixelRatio,height:t.canvas.height*window.devicePixelRatio,format:l.Z.DEPTH_STENCIL})}),o=u.Z.multiplyByUniformScale(u.Z.multiplyByTranslation(f.Z.eastNorthUpToFixedFrame(h.Z.fromDegrees(116.23,39.54)),new h.Z(0,0,25),new u.Z),200,new u.Z),a=new N(o,t,r);e.scene.primitives.add(a);const C="\n        in vec2 v_textureCoordinates;\n        uniform sampler2D colorTexture;\n        uniform sampler2D renderTexture;\n        out vec4 fragColor;\n        void main(void) {\n            vec4 renderColor = texture(renderTexture, v_textureCoordinates);\n            vec4 color = texture(colorTexture, v_textureCoordinates);\n            if ((renderColor.r < 0.9 || renderColor.g < 0.9 || renderColor.b < 0.9) && renderColor.a > 0.2) {\n              fragColor = renderColor;\n            }\n            else {\n              fragColor = color;\n            }\n        }\n        ";e.scene.postProcessStages.add(new v.Z({fragmentShader:C,uniforms:{renderTexture:a.framebuffer._colorTextures[0]}}));const Z=p.Z.toRadians(-90),_=p.Z.toRadians(-90),g=500;e.camera.lookAt(h.Z.fromDegrees(116.23,39.54,500),new w.Z(Z,_,g)),e.camera.lookAtTransform(u.Z.IDENTITY),window.addEventListener("resize",(()=>{}))}}},U=t(40089);const V=(0,U.Z)(O,[["render",a],["__scopeId","data-v-088a5d59"]]);var M=V}}]);
//# sourceMappingURL=2465.d80ebb23.js.map