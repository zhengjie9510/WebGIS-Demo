{"version":3,"file":"js/315.e64f2752.js","mappings":"iLACOA,GAAG,mB,0CAARC,EAAAA,EAAAA,IAAgC,MAAhCC,E,mHAMF,MAAMC,EAAaC,EAAQ,OAE3B,OACEC,UACEC,KAAKC,MACP,EACAC,QAAS,CACPD,OACE,IAAIE,EAAS,IAAIC,EAAAA,EAAc,kBAAmB,CAChDC,gBAAiB,IAAID,EAAAA,EAAkC,CACrDE,IAAK,6DACLC,WAAY,CAAC,IAAK,IAAK,IAAK,SAG5BH,EAAAA,EAAAA,oCAEFD,EAAOK,gBAAkBC,OAAOC,kBAElCP,EAAOQ,MAAMC,kBAAkBC,KAAKC,SAAU,EAE9C,IAAK,MAAMC,KAAWlB,EAAWmB,SAAU,CACzC,MAAMC,EAAcF,EAAQG,SAASD,YAErC,IAAIC,EAAW,IAAId,EAAAA,EAAwB,CACzCe,UAAWf,EAAAA,EAAAA,iBAAmCa,EAAYG,KAAK,IAC/DC,MAAO,KAGT,MAAMC,EAAW,IAAIlB,EAAAA,EAAwB,CAC3Cc,SAAUA,IAENK,EAAa,IAAInB,EAAAA,EAAiB,CACtCoB,kBAAmBF,EACnBG,WAAY,IAAIrB,EAAAA,EAAkC,CAChDsB,SAAU,IAAItB,EAAAA,EAAgB,CAC5BuB,OAAQ,CACNC,KAAM,gBACNC,SAAU,CACRC,MAAO,IAAI1B,EAAAA,EAAa,GAAK,GAAK,GAAK,GACvC2B,UAAW,IACXC,WAAY,GAEdC,OAAQ,0iCA4BdC,cAAc,IAEhB/B,EAAOQ,MAAMwB,WAAWC,IAAIb,GAE5BL,EAAWd,EAAAA,EAAAA,eAAuCc,GAClDf,EAAOkC,OAAOC,oBAAoBpB,EAASqB,eAAgB,CAAEC,SAAU,GACzE,CACF,I,WC7EJ,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://webgis/./src/components/cesium/glow_border.vue","webpack://webgis/./src/components/cesium/glow_border.vue?5b83"],"sourcesContent":["<template>\r\n  <div id=\"cesiumContainer\"></div>\r\n</template>\r\n\r\n<script>\r\nimport 'cesium/Build/Cesium/Widgets/widgets.css'\r\nimport * as Cesium from 'cesium'\r\nconst borderJson = require('../../../public/SampleData/sichuan.json')\r\n\r\nexport default {\r\n  mounted() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    init() {\r\n      var viewer = new Cesium.Viewer('cesiumContainer', {\r\n        imageryProvider: new Cesium.UrlTemplateImageryProvider({\r\n          url: \"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\",\r\n          subdomains: [\"a\", \"b\", \"c\", \"d\"],\r\n        })\r\n      })\r\n      if (Cesium.FeatureDetection.supportsImageRenderingPixelated()) {\r\n        //判断是否支持图像渲染像素化处理\r\n        viewer.resolutionScale = window.devicePixelRatio\r\n      }\r\n      viewer.scene.postProcessStages.fxaa.enabled = true\r\n\r\n      for (const feature of borderJson.features) {\r\n        const coordinates = feature.geometry.coordinates\r\n\r\n        let geometry = new Cesium.PolylineGeometry({\r\n          positions: Cesium.Cartesian3.fromDegreesArray(coordinates.flat(2)),\r\n          width: 10.0\r\n        })\r\n\r\n        const instance = new Cesium.GeometryInstance({\r\n          geometry: geometry\r\n        })\r\n        const glowBorder = new Cesium.Primitive({\r\n          geometryInstances: instance,\r\n          appearance: new Cesium.PolylineMaterialAppearance({\r\n            material: new Cesium.Material({\r\n              fabric: {\r\n                type: 'MyBorderColor',\r\n                uniforms: {\r\n                  color: new Cesium.Color(0.8, 0.2, 0.5, 1.0),\r\n                  glowPower: 0.25,\r\n                  taperPower: 1\r\n                },\r\n                source: `\r\n                  uniform vec4 color;\r\n                  uniform float glowPower;\r\n                  uniform float taperPower;\r\n                  czm_material czm_getMaterial(czm_materialInput materialInput)\r\n                  {\r\n                    czm_material material = czm_getDefaultMaterial(materialInput);\r\n                    vec2 st = materialInput.st;\r\n                    float glow = glowPower / abs(st.t - 0.5) - (glowPower / 0.5);\r\n\r\n                    if (taperPower <= 0.99999) {\r\n                        glow *= min(1.0, taperPower / (0.5 - st.s * 0.5) - (taperPower / 0.5));\r\n                    }\r\n\r\n                    vec4 fragColor;\r\n                    fragColor.rgb = max(vec3(glow - 1.0 + color.rgb), color.rgb);\r\n                    fragColor.a = clamp(0.0, 1.0, glow) * color.a;\r\n                    fragColor = czm_gammaCorrect(fragColor);\r\n\r\n                    material.emission = fragColor.rgb;\r\n                    material.alpha = fragColor.a;\r\n\r\n                    return material;\r\n                  }\r\n                `\r\n              }\r\n            })\r\n          }),\r\n          allowPicking: false\r\n        })\r\n        viewer.scene.primitives.add(glowBorder)\r\n\r\n        geometry = Cesium.PolylineGeometry.createGeometry(geometry)\r\n        viewer.camera.flyToBoundingSphere(geometry.boundingSphere, { duration: 0 })\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#cesiumContainer {\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n</style>\r\n","import { render } from \"./glow_border.vue?vue&type=template&id=1ec4d86c&scoped=true\"\nimport script from \"./glow_border.vue?vue&type=script&lang=js\"\nexport * from \"./glow_border.vue?vue&type=script&lang=js\"\n\nimport \"./glow_border.vue?vue&type=style&index=0&id=1ec4d86c&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\Documents\\\\GitHub\\\\webgis\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1ec4d86c\"]])\n\nexport default __exports__"],"names":["id","_createElementBlock","_hoisted_1","borderJson","require","mounted","this","init","methods","viewer","Cesium","imageryProvider","url","subdomains","resolutionScale","window","devicePixelRatio","scene","postProcessStages","fxaa","enabled","feature","features","coordinates","geometry","positions","flat","width","instance","glowBorder","geometryInstances","appearance","material","fabric","type","uniforms","color","glowPower","taperPower","source","allowPicking","primitives","add","camera","flyToBoundingSphere","boundingSphere","duration","__exports__","render"],"sourceRoot":""}