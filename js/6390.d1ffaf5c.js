"use strict";(self["webpackChunkwebgis"]=self["webpackChunkwebgis"]||[]).push([[6390],{36390:function(e,n,t){t.r(n),t.d(n,{default:function(){return E}});var o=t(73396);const r={id:"cesiumContainer"};function i(e,n,t,i,a,c){return(0,o.wg)(),(0,o.iD)("div",r)}t(63408),t(14590);var a=t(86675),c=t(12588),s=t(40985),l=t(52420),m=t(78393),u=t(25100),p=t(86337),d=t(85363),v=t(54117),w=t(59468),Z=t(67584),_=t(40617),f=t(82104),g=t(16003),y=t(38511),h=t(36284),b=t(92119);function z(e){return fetch(e).then((e=>{if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return e.json()})).catch((e=>{console.error("Error:",e)}))}var S={mounted(){this.init()},methods:{init(){const e=new a.Z("cesiumContainer",{imageryProvider:new c.Z({url:"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png",subdomains:["a","b","c","d"]})});s.Z.supportsImageRenderingPixelated()&&(e.resolutionScale=window.devicePixelRatio),e.scene.postProcessStages.fxaa.enabled=!0,z("/webgis-demo/SampleData/surface.json").then((n=>{let t=new Float32Array(n.positions),o=new Uint8Array(n.colors),r=new l.Z({position:new m.Z({componentDatatype:u.Z.DOUBLE,componentsPerAttribute:3,values:t}),color:new m.Z({componentDatatype:u.Z.FLOAT,componentsPerAttribute:4,values:o})}),i=new Uint32Array(n.indices),a=new p.Z({attributes:r,indices:i,primitiveType:d.Z.TRIANGLES,boundingSphere:v.Z.fromVertices(t)});a=w.Z.computeNormal(a);let c=Z.Z.eastNorthUpToFixedFrame(_.Z.fromDegrees(n.centroid.x,n.centroid.y)),s=new f.Z({geometry:a,modelMatrix:c});function z(){return"\n            in vec3 position3DHigh;\n            in vec3 position3DLow;\n            in vec3 normal;\n            in vec4 color;\n            in float batchId;\n\n            out vec3 v_positionEC;\n            out vec3 v_normalEC;\n            out vec4 v_color;\n\n            void main()\n            {\n                vec4 p = czm_computePosition();\n\n                v_positionEC = (czm_modelViewRelativeToEye * p).xyz;      // position in eye coordinates\n                v_normalEC = czm_normal * normal;                         // normal in eye coordinates\n                v_color = color;\n                gl_Position = czm_modelViewProjectionRelativeToEye * p;\n            }"}function S(){return"\n            in vec4 v_color;\n            czm_material czm_getMaterial(czm_materialInput materialInput)\n            {\n                czm_material material = czm_getDefaultMaterial(materialInput);\n                material.diffuse = czm_gammaCorrect(1. - v_color.rgb/255.); \n                return material;\n            }"}let C=new g.Z({translucent:!0,vertexShaderSource:z(),material:new y.Z({translucent:!1,fabric:{type:"MyColor",source:S()}}),materialSupport:g.Z.MaterialSupport.BASIC,renderState:{blending:h.Z.ALPHA_BLEND,depthTest:{enabled:!0},depthMask:!0}});const D=new b.Z({geometryInstances:s,appearance:C,asynchronous:!1});e.scene.primitives.add(D);let E=_.Z.fromDegrees(n.centroid.x,n.centroid.y),P=5e3;e.camera.flyToBoundingSphere(new v.Z(E,P),{duration:0})}))}}},C=t(40089);const D=(0,C.Z)(S,[["render",i],["__scopeId","data-v-60980ce3"]]);var E=D}}]);
//# sourceMappingURL=6390.d1ffaf5c.js.map