{"version":3,"file":"js/7348.d57d9aa7.js","mappings":"wOACOA,MAAM,a,UAAYC,EAAAA,EAAAA,GAAwB,UAAhBC,GAAG,KAAG,W,GAAdC,G,0CAAvBC,EAAAA,EAAAA,IAAqD,MAArDC,EAAqD,E,gBAKvD,GACEC,UACEC,KAAKC,MACP,EACAC,QAAS,CACPD,OACE,MAAME,EAAS,IAAIC,EAAAA,IACbC,EAASC,SAASC,cAAc,MAEhCC,EAAQ,IAAIJ,EAAAA,IACZK,EAAS,IAAIL,EAAAA,IAAwB,GAAIC,EAAOK,YAAcL,EAAOM,aAAc,GAAK,KAC9FF,EAAOG,SAASC,EAAI,EACpBL,EAAMM,IAAIL,GAEV,MAAMM,EAAW,IAAIX,EAAAA,IAAoB,CAAEC,OAAQA,EAAQW,WAAW,IACtED,EAASE,QAAQZ,EAAOa,WAAYb,EAAOc,aAC3CJ,EAASK,cAAcC,OAAOC,kBAC9BP,EAASQ,cAAc,EAAS,GAGhC,MAAMC,EAAgB,IAAIpB,EAAAA,IAAqB,GAAK,GAAI,IAClDqB,EAAgB,IAAIrB,EAAAA,IAAwB,CAChDsB,IAAKvB,EAAOwB,KAAK,mCACjBC,QAASzB,EAAOwB,KAAK,oCACrBE,YAAa1B,EAAOwB,KAAK,sCACzBG,UAAW,KAGPC,EAAY,IAAI3B,EAAAA,IAAWoB,EAAeC,GAChDjB,EAAMM,IAAIiB,GAGV,MAAMC,EAAe,IAAI5B,EAAAA,IAAmB,SAAU,IACtDI,EAAMM,IAAIkB,GAGV,MAAMC,EAAe,IAAI7B,EAAAA,IAAiB,SAAU,IAEpD6B,EAAarB,SAASsB,IAAI,EAAG,EAAG,GAChC1B,EAAMM,IAAImB,GAGV,MAAME,EAAgB,IAAI/B,EAAAA,IAAqB,IAAM,GAAI,IACnDgC,EAAgB,IAAIhC,EAAAA,IAAwB,CAChDsB,IAAKvB,EAAOwB,KAAK,qCACjBU,aAAa,IAETC,EAAY,IAAIlC,EAAAA,IAAW+B,EAAeC,GAChD5B,EAAMM,IAAIwB,GAGV,MAAMC,EAAe,IAAInC,EAAAA,IAAqB,GAAI,GAAI,IAChDoC,EAAe,IAAIpC,EAAAA,IAAwB,CAC/CsB,IAAKvB,EAAOwB,KAAK,iCACjBc,KAAMrC,EAAAA,MAEFsC,EAAW,IAAItC,EAAAA,IAAWmC,EAAcC,GAI9C,SAASG,IACP,GAAIC,EAA4B7B,GAAW,CACzC,MAAMV,EAASU,EAAS8B,WACxBpC,EAAOqC,OAASzC,EAAOK,YAAcL,EAAOM,aAC5CF,EAAOsC,wBACT,CACAhB,EAAUiB,SAASC,GAAK,MACxBX,EAAUU,SAASC,GAAK,MACxBP,EAASM,SAASC,GAAK,KACvBlC,EAASmC,OAAO1C,EAAOC,GACvB0C,sBAAsBR,EACxB,CAEA,SAASC,EAA4B7B,GACnC,MAAMV,EAASU,EAAS8B,WAClBO,EAAQ/C,EAAOK,YACf2C,EAAShD,EAAOM,aAChB2C,EAAajD,EAAO+C,QAAUA,GAAS/C,EAAOgD,SAAWA,EAI/D,OAHIC,GACFvC,EAASE,QAAQmC,EAAOC,GAAQ,GAE3BC,CACT,CAzBA9C,EAAMM,IAAI4B,GAEVC,GAwBF,I,WClFJ,MAAMY,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASL,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://webgis/./src/components/three/real_earth.vue","webpack://webgis/./src/components/three/real_earth.vue?2155"],"sourcesContent":["<template>\n  <div class=\"container\"><canvas id=\"c\"></canvas></div>\n</template>\n<script>\nimport * as THREE from 'three'\n\nexport default {\n  mounted() {\n    this.init()\n  },\n  methods: {\n    init() {\n      const loader = new THREE.TextureLoader()\n      const canvas = document.querySelector('#c')\n\n      const scene = new THREE.Scene()\n      const camera = new THREE.PerspectiveCamera(45, canvas.clientWidth / canvas.clientHeight, 0.1, 1000)\n      camera.position.z = 2\n      scene.add(camera)\n\n      const renderer = new THREE.WebGLRenderer({ canvas: canvas, antialias: true, });\n      renderer.setSize(canvas.innerWidth, canvas.innerHeight)\n      renderer.setPixelRatio(window.devicePixelRatio)\n      renderer.setClearColor(0x00000, 1.0)\n\n      // create earth\n      const earthgeometry = new THREE.SphereGeometry(0.6, 32, 32)\n      const earthmaterial = new THREE.MeshPhongMaterial({\n        map: loader.load('./SampleData/earth/earthmap.jpg'),\n        bumpMap: loader.load('./SampleData/earth/earthbump.jpg'),\n        specularMap: loader.load('./SampleData/earth/specularmap.jpg'),\n        bumpScale: 0.3,\n      })\n\n      const earthmesh = new THREE.Mesh(earthgeometry, earthmaterial);\n      scene.add(earthmesh);\n\n      // set ambientlight\n      const ambientlight = new THREE.AmbientLight(0xffffff, 0.2);\n      scene.add(ambientlight);\n\n      // set point light\n      const pointerlight = new THREE.PointLight(0xffffff, 0.9);\n      // set light position\n      pointerlight.position.set(5, 3, 5);\n      scene.add(pointerlight);\n\n      // cloud\n      const cloudgeometry = new THREE.SphereGeometry(0.63, 32, 32);\n      const cloudmaterial = new THREE.MeshPhongMaterial({\n        map: loader.load('./SampleData/earth/earthCloud.png'),\n        transparent: true\n      });\n      const cloudmesh = new THREE.Mesh(cloudgeometry, cloudmaterial);\n      scene.add(cloudmesh);\n\n      // star\n      const stargeometry = new THREE.SphereGeometry(80, 64, 64);\n      const starmaterial = new THREE.MeshBasicMaterial({\n        map: loader.load('./SampleData/earth/galaxy.png'),\n        side: THREE.BackSide\n      });\n      const starmesh = new THREE.Mesh(stargeometry, starmaterial);\n      scene.add(starmesh);\n\n      animate();\n      function animate() {\n        if (resizeRendererToDisplaySize(renderer)) {\n          const canvas = renderer.domElement\n          camera.aspect = canvas.clientWidth / canvas.clientHeight\n          camera.updateProjectionMatrix()\n        }\n        earthmesh.rotation.y -= 0.0015;\n        cloudmesh.rotation.y += 0.0015;\n        starmesh.rotation.y += 0.0005;\n        renderer.render(scene, camera);\n        requestAnimationFrame(animate);\n      }\n\n      function resizeRendererToDisplaySize(renderer) {\n        const canvas = renderer.domElement\n        const width = canvas.clientWidth\n        const height = canvas.clientHeight\n        const needResize = canvas.width !== width || canvas.height !== height\n        if (needResize) {\n          renderer.setSize(width, height, false)\n        }\n        return needResize\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n}\n\n#c {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  margin: 0%;\n}\n</style>\n","import { render } from \"./real_earth.vue?vue&type=template&id=757eedd5&scoped=true\"\nimport script from \"./real_earth.vue?vue&type=script&lang=js\"\nexport * from \"./real_earth.vue?vue&type=script&lang=js\"\n\nimport \"./real_earth.vue?vue&type=style&index=0&id=757eedd5&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/zhengjie/Documents/webgis/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-757eedd5\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","id","_hoisted_2","_createElementBlock","_hoisted_1","mounted","this","init","methods","loader","THREE","canvas","document","querySelector","scene","camera","clientWidth","clientHeight","position","z","add","renderer","antialias","setSize","innerWidth","innerHeight","setPixelRatio","window","devicePixelRatio","setClearColor","earthgeometry","earthmaterial","map","load","bumpMap","specularMap","bumpScale","earthmesh","ambientlight","pointerlight","set","cloudgeometry","cloudmaterial","transparent","cloudmesh","stargeometry","starmaterial","side","starmesh","animate","resizeRendererToDisplaySize","domElement","aspect","updateProjectionMatrix","rotation","y","render","requestAnimationFrame","width","height","needResize","__exports__"],"sourceRoot":""}