{"version":3,"file":"js/42.a95724b4.js","mappings":"8KACOA,GAAG,mB,0CAARC,EAAAA,EAAAA,IAAgC,MAAhCC,E,0EAOF,GACEC,UACEC,KAAKC,MACP,EACAC,QAAS,CACPD,OACE,IAAIE,EAAS,IAAIC,EAAAA,EAAc,kBAAmB,CAAEC,gBAAiBD,EAAAA,MACjEA,EAAAA,EAAAA,oCACFD,EAAOG,gBAAkBC,OAAOC,kBAElCL,EAAOM,MAAMC,kBAAkBC,KAAKC,SAAU,EAC9C,MAAMC,EAASV,EAAOW,SAASC,IAAI,CACjCC,SAAUZ,EAAAA,EAAAA,YAA8B,SAAU,OAAQ,KAC1Da,MAAO,CAAC,IAEVd,EAAOe,OAAOL,GACd,MAAMM,EAAuB,2qDAsC7BhB,EAAOM,MAAMC,kBAAkBK,IAC7B,IAAIX,EAAAA,EAAwB,CAC1BgB,eAAgBD,EAChBE,SAAU,CACRC,cAAe,IAAIlB,EAAAA,EAAkB,GAAI,EAAK,IAAM,GACpDmB,SAAU,IAAInB,EAAAA,EAAa,GAAK,GAAK,GAAK,MAIlD,I,QChEJ,MAAMoB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://webgis/./src/components/cesium/fog_effect.vue","webpack://webgis/./src/components/cesium/fog_effect.vue?4454"],"sourcesContent":["<template>\r\n  <div id=\"cesiumContainer\"></div>\r\n</template>\r\n\r\n<script>\r\nimport 'cesium/Build/Cesium/Widgets/widgets.css'\r\nimport * as Cesium from 'cesium'\r\n\r\nexport default {\r\n  mounted() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    init() {\r\n      var viewer = new Cesium.Viewer('cesiumContainer', { terrainProvider: Cesium.createWorldTerrain() })\r\n      if (Cesium.FeatureDetection.supportsImageRenderingPixelated()) {\r\n        viewer.resolutionScale = window.devicePixelRatio\r\n      }\r\n      viewer.scene.postProcessStages.fxaa.enabled = true\r\n      const entity = viewer.entities.add({\r\n        position: Cesium.Cartesian3.fromDegrees(108.4175, 30.655, 1000),\r\n        point: {}\r\n      })\r\n      viewer.zoomTo(entity)\r\n      const fragmentShaderSource = `\r\n        float getDistance(sampler2D depthTexture, vec2 texCoords) \r\n        { \r\n            float depth = czm_unpackDepth(texture2D(depthTexture, texCoords)); \r\n            if (depth == 0.0) { \r\n                return czm_infinity; \r\n            } \r\n            vec4 eyeCoordinate = czm_windowToEyeCoordinates(gl_FragCoord.xy, depth); \r\n            return -eyeCoordinate.z / eyeCoordinate.w; \r\n        } \r\n        float interpolateByDistance(vec4 nearFarScalar, float distance) \r\n        { \r\n            float startDistance = nearFarScalar.x; \r\n            float startValue = nearFarScalar.y; \r\n            float endDistance = nearFarScalar.z; \r\n            float endValue = nearFarScalar.w; \r\n            float t = clamp((distance - startDistance) / (endDistance - startDistance), 0.0, 1.0); \r\n            return mix(startValue, endValue, t); \r\n        } \r\n        vec4 alphaBlend(vec4 sourceColor, vec4 destinationColor) \r\n        { \r\n            return sourceColor * vec4(sourceColor.aaa, 1.0) + destinationColor * (1.0 - sourceColor.a); \r\n        } \r\n        uniform sampler2D colorTexture; \r\n        uniform sampler2D depthTexture; \r\n        uniform vec4 fogByDistance; \r\n        uniform vec4 fogColor; \r\n        varying vec2 v_textureCoordinates; \r\n        void main(void) \r\n        { \r\n            float distance = getDistance(depthTexture, v_textureCoordinates); \r\n            vec4 sceneColor = texture2D(colorTexture, v_textureCoordinates); \r\n            float blendAmount = interpolateByDistance(fogByDistance, distance); \r\n            vec4 finalFogColor = vec4(fogColor.rgb, fogColor.a * blendAmount); \r\n            gl_FragColor = alphaBlend(finalFogColor, sceneColor); \r\n        }\r\n        `;\r\n\r\n      viewer.scene.postProcessStages.add(\r\n        new Cesium.PostProcessStage({\r\n          fragmentShader: fragmentShaderSource,\r\n          uniforms: {\r\n            fogByDistance: new Cesium.Cartesian4(10, 0.0, 4000, 1.0),\r\n            fogColor: new Cesium.Color(0.8, 0.8, 0.8, 1.0),\r\n          },\r\n        })\r\n      );\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#cesiumContainer {\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n</style>\r\n","import { render } from \"./fog_effect.vue?vue&type=template&id=72198c3c&scoped=true\"\nimport script from \"./fog_effect.vue?vue&type=script&lang=js\"\nexport * from \"./fog_effect.vue?vue&type=script&lang=js\"\n\nimport \"./fog_effect.vue?vue&type=style&index=0&id=72198c3c&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\Documents\\\\GitHub\\\\webgis\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-72198c3c\"]])\n\nexport default __exports__"],"names":["id","_createElementBlock","_hoisted_1","mounted","this","init","methods","viewer","Cesium","terrainProvider","resolutionScale","window","devicePixelRatio","scene","postProcessStages","fxaa","enabled","entity","entities","add","position","point","zoomTo","fragmentShaderSource","fragmentShader","uniforms","fogByDistance","fogColor","__exports__","render"],"sourceRoot":""}