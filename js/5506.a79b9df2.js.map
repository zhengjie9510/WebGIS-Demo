{"version":3,"file":"js/5506.a79b9df2.js","mappings":"kLACOA,GAAG,mB,0CAARC,EAAAA,EAAAA,IAAgC,MAAhCC,E,mHAOF,MAAMC,EACJC,YAAYC,GACVC,KAAKC,MAAQ,IAAIC,EAAAA,EAAwB,aACzCF,KAAKG,YAASC,EACdJ,KAAKK,oBAAiBD,EACtBJ,KAAKM,iBAAcF,EACnBJ,KAAKO,aAAUH,CACjB,CAKAI,WAAWC,GACJT,KAAKO,UACRP,KAAKO,QAAU,IAAIL,EAAAA,EAA+BO,EAAOC,MAAMC,SAGjEX,KAAKO,QAAQK,gBAAgBC,IAC3B,MAAMC,EAAgBd,KAAKe,YAAYN,EAAQI,EAAMG,UACjDd,EAAAA,EAAeY,KACZd,KAAKG,SACRH,KAAKG,OAASW,GAElB,GACCZ,EAAAA,EAAAA,YAEHF,KAAKO,QAAQK,gBAAgBK,IAC3B,GAAIjB,KAAKG,OAAQ,CACf,MAAMW,EAAgBd,KAAKe,YAAYN,EAAQQ,EAAKC,aACpD,GAAIhB,EAAAA,EAAeY,KACjBd,KAAKK,eAAiBS,GACjBd,KAAKM,aAAa,CACrB,MAAMa,EAAS,IAAIjB,EAAAA,GAAwB,IAClCA,EAAAA,EAAAA,SAA2BF,KAAKG,OAAQH,KAAKK,kBACnD,GACHL,KAAKM,YAAcN,KAAKoB,WAAWpB,KAAKG,OAAQgB,EAClD,CAEJ,IACCjB,EAAAA,EAAAA,YAEHF,KAAKO,QAAQK,gBAAgBC,IAC3B,GAAIb,KAAKM,YAAa,CACpB,MAAMQ,EAAgBd,KAAKe,YAAYN,EAAQI,EAAMG,UACrD,GAAId,EAAAA,EAAeY,GAAgB,CACjC,MAAMK,EAASjB,EAAAA,EAAAA,SAA2BF,KAAKG,OAAQW,GACvDd,KAAKoB,WAAWpB,KAAKG,OAAQgB,GAC7BnB,KAAKC,MAAMoB,SAASC,OAAOtB,KAAKM,aAChCN,KAAKG,YAASC,EACdJ,KAAKK,oBAAiBD,EACtBJ,KAAKM,iBAAcF,CACrB,CACF,IACCF,EAAAA,EAAAA,YACL,CAIAqB,cACEvB,KAAKO,QAAUP,KAAKO,SAAWP,KAAKO,QAAQiB,SAC9C,CAOAT,YAAYN,EAAQO,GAClB,IAAIF,EAEJ,GAAIL,EAAOgB,2BAA2BvB,EAAAA,EACpCY,EAAgBL,EAAOC,MAAMgB,OAAOC,cAAcX,OAG/C,CACH,MAAMY,EAAMnB,EAAOiB,OAAOG,WAAWb,GACrCF,EAAgBL,EAAOC,MAAMoB,MAAMC,KAAKH,EAAKnB,EAAOC,MACtD,CACA,OAAOI,CACT,CAOAM,WAAWjB,EAAQgB,GACjB,OAAOnB,KAAKC,MAAMoB,SAASW,IAAI,CAC7BhB,SAAUb,EACV8B,QAAS,CACPC,cAAef,EACfgB,cAAehB,EACfiB,SAAUlC,EAAAA,EAAAA,IAAAA,UAA2B,MAG3C,CAKAmC,SAAS5B,GACPA,EAAO6B,YAAYN,IAAIhC,KAAKC,MAC9B,EAEF,OACEsC,UACEvC,KAAKwC,MACP,EACAC,QAAS,CACPD,OACE,MAAM/B,EAAS,IAAIP,EAAAA,EAAc,kBAAmB,CAAEwC,SAAS,EAAOC,oBAAoB,IACtFzC,EAAAA,EAAAA,oCAEFO,EAAOmC,gBAAkBC,OAAOC,kBAElCrC,EAAOC,MAAMqC,kBAAkBC,KAAKC,SAAU,EAC9CxC,EAAOC,MAAMwC,0BAA2B,EAExC,MAAM9B,EAAa,IAAIvB,EACvBuB,EAAWZ,WAAWC,GACtBW,EAAWiB,SAAS5B,EACtB,I,WC1HJ,MAAM0C,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://webgis/./src/components/public/draw_circle.vue","webpack://webgis/./src/components/public/draw_circle.vue?a293"],"sourcesContent":["<template>\n  <div id=\"cesiumContainer\"></div>\n</template>\n\n<script>\nimport 'cesium/Build/Cesium/Widgets/widgets.css'\nimport * as Cesium from 'cesium'\n\nclass DrawCircle {\n  constructor(options) {\n    this.layer = new Cesium.CustomDataSource('MyCircles')\n    this.center = undefined\n    this.activePosition = undefined\n    this.activeShape = undefined\n    this.handler = undefined\n  }\n  /**\n   * 添加鼠标点击事件\n   * @param {Cesium.Viewer} viewer 目标地图\n   */\n  bindAction(viewer) {\n    if (!this.handler) {\n      this.handler = new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);\n    }\n    // 鼠标左键单击画点\n    this.handler.setInputAction((click) => {\n      const earthPosition = this.getPosition(viewer, click.position)\n      if (Cesium.defined(earthPosition)) {\n        if (!this.center) {\n          this.center = earthPosition\n        }\n      }\n    }, Cesium.ScreenSpaceEventType.LEFT_CLICK)\n    // 鼠标移动\n    this.handler.setInputAction((move) => {\n      if (this.center) {\n        const earthPosition = this.getPosition(viewer, move.endPosition)\n        if (Cesium.defined(earthPosition)) {\n          this.activePosition = earthPosition\n          if (!this.activeShape) {\n            const radius = new Cesium.CallbackProperty(() => {\n              return Cesium.Cartesian3.distance(this.center, this.activePosition);\n            }, false);\n            this.activeShape = this.drawCircle(this.center, radius)\n          }\n        }\n      }\n    }, Cesium.ScreenSpaceEventType.MOUSE_MOVE)\n    // 单击鼠标右键结束画圆\n    this.handler.setInputAction((click) => {\n      if (this.activeShape) {\n        const earthPosition = this.getPosition(viewer, click.position)\n        if (Cesium.defined(earthPosition)) {\n          const radius = Cesium.Cartesian3.distance(this.center, earthPosition)\n          this.drawCircle(this.center, radius)\n          this.layer.entities.remove(this.activeShape)\n          this.center = undefined\n          this.activePosition = undefined\n          this.activeShape = undefined\n        }\n      }\n    }, Cesium.ScreenSpaceEventType.RIGHT_CLICK)\n  }\n  /**\n  * 解绑鼠标事件\n  */\n  unbindAcion() {\n    this.handler = this.handler && this.handler.destroy();\n  }\n  /**\n   * 添加鼠标点击事件的位置\n   * @param {Cesium.Viewer} viewer 目标地图\n   * @param {Cesium.Cartesian2} position 鼠标位置\n   * @return {Cesium.Cartesian3} 鼠标点击位置的坐标\n   */\n  getPosition(viewer, position) {\n    let earthPosition = undefined\n    // 球面\n    if (viewer.terrainProvider instanceof Cesium.EllipsoidTerrainProvider) {\n      earthPosition = viewer.scene.camera.pickEllipsoid(position);\n    }\n    // 地形\n    else {\n      const ray = viewer.camera.getPickRay(position);\n      earthPosition = viewer.scene.globe.pick(ray, viewer.scene);\n    }\n    return earthPosition\n  }\n  /**\n   * 画圆\n   * @param {Cesium.Cartesian3} center 中心点坐标\n   * @param {number} radius 半径\n   * @return {Cesium.Entity} 圆实体\n   */\n  drawCircle(center, radius) {\n    return this.layer.entities.add({\n      position: center,\n      ellipse: {\n        semiMinorAxis: radius,\n        semiMajorAxis: radius,\n        material: Cesium.Color.RED.withAlpha(0.5),\n      },\n    });\n  }\n  /**\n   * 添加图层\n   * @param {Cesium.Viewer} viewer 目标地图\n   */\n  addToMap(viewer) {\n    viewer.dataSources.add(this.layer);\n  }\n}\nexport default {\n  mounted() {\n    this.init()\n  },\n  methods: {\n    init() {\n      const viewer = new Cesium.Viewer('cesiumContainer', { infoBox: false, selectionIndicator: false })\n      if (Cesium.FeatureDetection.supportsImageRenderingPixelated()) {\n        //判断是否支持图像渲染像素化处理\n        viewer.resolutionScale = window.devicePixelRatio\n      }\n      viewer.scene.postProcessStages.fxaa.enabled = true\n      viewer.scene.debugShowFramesPerSecond = true // 显示帧率\n\n      const drawCircle = new DrawCircle()\n      drawCircle.bindAction(viewer)\n      drawCircle.addToMap(viewer)\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n#cesiumContainer {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n}\n</style>\n","import { render } from \"./draw_circle.vue?vue&type=template&id=c27719da&scoped=true\"\nimport script from \"./draw_circle.vue?vue&type=script&lang=js\"\nexport * from \"./draw_circle.vue?vue&type=script&lang=js\"\n\nimport \"./draw_circle.vue?vue&type=style&index=0&id=c27719da&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/zhengjie/Documents/webgis/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-c27719da\"]])\n\nexport default __exports__"],"names":["id","_createElementBlock","_hoisted_1","DrawCircle","constructor","options","this","layer","Cesium","center","undefined","activePosition","activeShape","handler","bindAction","viewer","scene","canvas","setInputAction","click","earthPosition","getPosition","position","move","endPosition","radius","drawCircle","entities","remove","unbindAcion","destroy","terrainProvider","camera","pickEllipsoid","ray","getPickRay","globe","pick","add","ellipse","semiMinorAxis","semiMajorAxis","material","addToMap","dataSources","mounted","init","methods","infoBox","selectionIndicator","resolutionScale","window","devicePixelRatio","postProcessStages","fxaa","enabled","debugShowFramesPerSecond","__exports__","render"],"sourceRoot":""}