{"version":3,"file":"js/6414.10a54913.js","mappings":"kLACOA,GAAG,mB,0CAARC,EAAAA,EAAAA,IAAgC,MAAhCC,E,4DAOF,GACEC,UACEC,KAAKC,MACP,EACAC,QAAS,CACPC,aACE,IAAIC,EAAS,IAAIC,EAAAA,EAAc,kBAAmB,CAAEC,sBAAuBD,EAAAA,MACvEA,EAAAA,EAAAA,oCACFD,EAAOG,gBAAkBC,OAAOC,kBAElCL,EAAOM,MAAMC,kBAAkBC,KAAKC,SAAU,EAC9C,MAAMC,EAASV,EAAOW,SAASC,IAAI,CACjCC,SAAUZ,EAAAA,EAAAA,YAA8B,MAAO,KAAO,MACtDa,MAAO,CAAC,IAEVd,EAAOe,OAAOL,GACd,MAAMM,EAAuB,k0CAkC7BhB,EAAOM,MAAMC,kBAAkBK,IAC7B,IAAIX,EAAAA,EAAwB,CAC1BgB,eAAgBD,EAChBE,SAAU,CACRC,SAAU,IACVC,UAAW,MAInB,I,WC5DJ,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://webgis/./src/components/public/snow_effect.vue","webpack://webgis/./src/components/public/snow_effect.vue?ee24"],"sourcesContent":["<template>\n  <div id=\"cesiumContainer\"></div>\n</template>\n\n<script>\nimport 'cesium/Build/Cesium/Widgets/widgets.css'\nimport * as Cesium from 'cesium'\n\nexport default {\n  mounted() {\n    this.init()\n  },\n  methods: {\n    async init() {\n      var viewer = new Cesium.Viewer('cesiumContainer', { terrainProvider: await Cesium.createWorldTerrainAsync() })\n      if (Cesium.FeatureDetection.supportsImageRenderingPixelated()) {\n        viewer.resolutionScale = window.devicePixelRatio\n      }\n      viewer.scene.postProcessStages.fxaa.enabled = true\n      const entity = viewer.entities.add({\n        position: Cesium.Cartesian3.fromDegrees(86.57, 27.70, 15000),\n        point: {}\n      })\n      viewer.zoomTo(entity)\n      const fragmentShaderSource = `\n        uniform sampler2D colorTexture;\n        in vec2 v_textureCoordinates;\n        uniform float snowSpeed;\n        uniform float snowSize;\n        out vec4 fragColor;\n        float snow(vec2 uv,float scale)\n        {\n            float time=czm_frameNumber/snowSpeed;\n            float w=smoothstep(1.,0.,-uv.y*(scale/10.));if(w<.1)return 0.;\n            uv+=time/scale;uv.y+=time*2./scale;uv.x+=sin(uv.y+time*.5)/scale;\n            uv*=scale;vec2 s=floor(uv),f=fract(uv),p;float k=3.,d;\n            p=.5+.35*sin(11.*fract(sin((s+p+scale)*mat2(7,3,6,5))*5.))-f;d=length(p);k=min(d,k);\n            k=smoothstep(0.,k,sin(f.x+f.y)*snowSize);\n            return k*w;\n        }\n        void main(){\n            vec2 resolution=czm_viewport.zw;\n            vec2 uv=(gl_FragCoord.xy*2.-resolution.xy)/min(resolution.x,resolution.y);\n            vec3 finalColor=vec3(0);\n            // float c=smoothstep(1.,0.3,clamp(uv.y*.3+.8,0.,.75));\n            float c=0.;\n            c+=snow(uv,30.)*.0;\n            c+=snow(uv,20.)*.0;\n            c+=snow(uv,15.)*.0;\n            c+=snow(uv,10.);\n            c+=snow(uv,8.);\n            c+=snow(uv,6.);\n            c+=snow(uv,5.);\n            finalColor=(vec3(c));\n            fragColor=mix(texture(colorTexture,v_textureCoordinates),vec4(finalColor,1),.5);\n        }\n      `;\n\n      viewer.scene.postProcessStages.add(\n        new Cesium.PostProcessStage({\n          fragmentShader: fragmentShaderSource,\n          uniforms: {\n            snowSize: 0.02,\n            snowSpeed: 60.0\n          },\n        })\n      );\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n#cesiumContainer {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n}\n</style>\n","import { render } from \"./snow_effect.vue?vue&type=template&id=68e6f170&scoped=true\"\nimport script from \"./snow_effect.vue?vue&type=script&lang=js\"\nexport * from \"./snow_effect.vue?vue&type=script&lang=js\"\n\nimport \"./snow_effect.vue?vue&type=style&index=0&id=68e6f170&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/zhengjie/Documents/webgis/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-68e6f170\"]])\n\nexport default __exports__"],"names":["id","_createElementBlock","_hoisted_1","mounted","this","init","methods","async","viewer","Cesium","terrainProvider","resolutionScale","window","devicePixelRatio","scene","postProcessStages","fxaa","enabled","entity","entities","add","position","point","zoomTo","fragmentShaderSource","fragmentShader","uniforms","snowSize","snowSpeed","__exports__","render"],"sourceRoot":""}