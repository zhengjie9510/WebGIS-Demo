{"version":3,"file":"js/4331.a119d47a.js","mappings":"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","sources":["webpack://webgis/./src/components/public/route_roaming.vue","webpack://webgis/./node_modules/@cesium/engine/Source/DataSources/PolylineGlowMaterialProperty.js","webpack://webgis/./src/components/public/route_roaming.vue?0243","webpack://webgis/./node_modules/@cesium/engine/Source/Scene/createOsmBuildings.js"],"sourcesContent":["<template>\r\n  <div id=\"cesiumContainer\"></div>\r\n</template>\r\n\r\n<script>\r\nimport 'cesium/Build/Cesium/Widgets/widgets.css'\r\nimport * as Cesium from 'cesium'\r\nexport default {\r\n  mounted() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    init() {\r\n      var viewer = new Cesium.Viewer('cesiumContainer')\r\n      if (Cesium.FeatureDetection.supportsImageRenderingPixelated()) {\r\n        //判断是否支持图像渲染像素化处理\r\n        viewer.resolutionScale = window.devicePixelRatio\r\n      }\r\n      viewer.scene.postProcessStages.fxaa.enabled = true\r\n      viewer.scene.primitives.add(Cesium.createOsmBuildings());\r\n\r\n      // 创建路径\r\n      var positions = [\r\n        Cesium.Cartographic.fromDegrees(-122.4041, 37.7833),\r\n        Cesium.Cartographic.fromDegrees(-118.2437, 34.0522),\r\n        Cesium.Cartographic.fromDegrees(-74.0059, 40.7128)\r\n      ];\r\n      var property = new Cesium.SampledPositionProperty();\r\n      for (var i = 0; i < positions.length; i++) {\r\n        var position = Cesium.Cartesian3.fromRadians(\r\n          positions[i].longitude,\r\n          positions[i].latitude,\r\n          positions[i].height\r\n        );\r\n        var time = Cesium.JulianDate.addSeconds(\r\n          viewer.clock.startTime,\r\n          i * 10,\r\n          new Cesium.JulianDate()\r\n        );\r\n        property.addSample(time, position);\r\n      }\r\n      // 创建路径实体\r\n      var entity = viewer.entities.add({\r\n        name: \"Path\",\r\n        position: property,\r\n        path: {\r\n          leadTime: 0,\r\n          trailTime: 60,\r\n          resolution: 1,\r\n          width: 3,\r\n          material: new Cesium.PolylineGlowMaterialProperty({\r\n            glowPower: 0.1,\r\n            color: Cesium.Color.YELLOW\r\n          })\r\n        }\r\n      });\r\n      // 创建路径漫游\r\n      var path = entity.path;\r\n      viewer.camera.flyPath(path, {\r\n        duration: 10,\r\n        pitchAdjustHeight: 1000,\r\n        maxPitch: Cesium.Math.toRadians(70),\r\n        onComplete: function () {\r\n          viewer.clock.shouldAnimate = false;\r\n        }\r\n      });\r\n      // 播放动画\r\n      viewer.clock.shouldAnimate = true;\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#cesiumContainer {\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n</style>\r\n","import Color from \"../Core/Color.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport Property from \"./Property.js\";\n\nconst defaultColor = Color.WHITE;\nconst defaultGlowPower = 0.25;\nconst defaultTaperPower = 1.0;\n\n/**\n * A {@link MaterialProperty} that maps to polyline glow {@link Material} uniforms.\n * @alias PolylineGlowMaterialProperty\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {Property|Color} [options.color=Color.WHITE] A Property specifying the {@link Color} of the line.\n * @param {Property|number} [options.glowPower=0.25] A numeric Property specifying the strength of the glow, as a percentage of the total line width.\n * @param {Property|number} [options.taperPower=1.0] A numeric Property specifying the strength of the tapering effect, as a percentage of the total line length.  If 1.0 or higher, no taper effect is used.\n */\nfunction PolylineGlowMaterialProperty(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  this._definitionChanged = new Event();\n  this._color = undefined;\n  this._colorSubscription = undefined;\n  this._glowPower = undefined;\n  this._glowPowerSubscription = undefined;\n  this._taperPower = undefined;\n  this._taperPowerSubscription = undefined;\n\n  this.color = options.color;\n  this.glowPower = options.glowPower;\n  this.taperPower = options.taperPower;\n}\n\nObject.defineProperties(PolylineGlowMaterialProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof PolylineGlowMaterialProperty.prototype\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return (\n        Property.isConstant(this._color) && Property.isConstant(this._glow)\n      );\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof PolylineGlowMaterialProperty.prototype\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the line.\n   * @memberof PolylineGlowMaterialProperty.prototype\n   * @type {Property|undefined}\n   */\n  color: createPropertyDescriptor(\"color\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the strength of the glow, as a percentage of the total line width (less than 1.0).\n   * @memberof PolylineGlowMaterialProperty.prototype\n   * @type {Property|undefined}\n   */\n  glowPower: createPropertyDescriptor(\"glowPower\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the strength of the tapering effect, as a percentage of the total line length.  If 1.0 or higher, no taper effect is used.\n   * @memberof PolylineGlowMaterialProperty.prototype\n   * @type {Property|undefined}\n   */\n  taperPower: createPropertyDescriptor(\"taperPower\"),\n});\n\n/**\n * Gets the {@link Material} type at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the type.\n * @returns {string} The type of material.\n */\nPolylineGlowMaterialProperty.prototype.getType = function (time) {\n  return \"PolylineGlow\";\n};\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nPolylineGlowMaterialProperty.prototype.getValue = function (time, result) {\n  if (!defined(result)) {\n    result = {};\n  }\n  result.color = Property.getValueOrClonedDefault(\n    this._color,\n    time,\n    defaultColor,\n    result.color\n  );\n  result.glowPower = Property.getValueOrDefault(\n    this._glowPower,\n    time,\n    defaultGlowPower,\n    result.glowPower\n  );\n  result.taperPower = Property.getValueOrDefault(\n    this._taperPower,\n    time,\n    defaultTaperPower,\n    result.taperPower\n  );\n  return result;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nPolylineGlowMaterialProperty.prototype.equals = function (other) {\n  return (\n    this === other ||\n    (other instanceof PolylineGlowMaterialProperty &&\n      Property.equals(this._color, other._color) &&\n      Property.equals(this._glowPower, other._glowPower) &&\n      Property.equals(this._taperPower, other._taperPower))\n  );\n};\nexport default PolylineGlowMaterialProperty;\n","import { render } from \"./route_roaming.vue?vue&type=template&id=28f3a2cc&scoped=true\"\nimport script from \"./route_roaming.vue?vue&type=script&lang=js\"\nexport * from \"./route_roaming.vue?vue&type=script&lang=js\"\n\nimport \"./route_roaming.vue?vue&type=style&index=0&id=28f3a2cc&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\Documents\\\\GitHub\\\\webgis\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-28f3a2cc\"]])\n\nexport default __exports__","import Color from \"../Core/Color.js\";\nimport combine from \"../Core/combine.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport deprecationWarning from \"../Core/deprecationWarning.js\";\nimport IonResource from \"../Core/IonResource.js\";\nimport Cesium3DTileset from \"./Cesium3DTileset.js\";\nimport Cesium3DTileStyle from \"./Cesium3DTileStyle.js\";\n\n/**\n * Creates a {@link Cesium3DTileset} instance for the\n * {@link https://cesium.com/content/cesium-osm-buildings/|Cesium OSM Buildings}\n * tileset.\n *\n * @function\n *\n * @param {object} [options] Construction options. Any options allowed by the {@link Cesium3DTileset} constructor\n *        may be specified here. In addition to those, the following properties are supported:\n * @param {Color} [options.defaultColor=Color.WHITE] The default color to use for buildings\n *        that do not have a color. This parameter is ignored if <code>options.style</code> is specified.\n * @param {Cesium3DTileStyle} [options.style] The style to use with the tileset. If not\n *        specified, a default style is used which gives each building or building part a\n *        color inferred from its OpenStreetMap <code>tags</code>. If no color can be inferred,\n *        <code>options.defaultColor</code> is used.\n * @param {boolean} [options.enableShowOutline=true] If true, enable rendering outlines. This can be set to false to avoid the additional processing of geometry at load time.\n * @param {boolean} [options.showOutline=true] Whether to show outlines around buildings. When true,\n *        outlines are displayed. When false, outlines are not displayed.\n * @returns {Cesium3DTileset}\n *\n * @see Ion\n *\n * @example\n * // Create Cesium OSM Buildings with default styling\n * const viewer = new Cesium.Viewer('cesiumContainer');\n * viewer.scene.primitives.add(Cesium.createOsmBuildings());\n *\n * @example\n * // Create Cesium OSM Buildings with a custom style highlighting\n * // schools and hospitals.\n * viewer.scene.primitives.add(Cesium.createOsmBuildings({\n *   style: new Cesium.Cesium3DTileStyle({\n *     color: {\n *       conditions: [\n *         [\"${feature['building']} === 'hospital'\", \"color('#0000FF')\"],\n *         [\"${feature['building']} === 'school'\", \"color('#00FF00')\"],\n *         [true, \"color('#ffffff')\"]\n *       ]\n *     }\n *   })\n * }));\n */\nfunction createOsmBuildings(options) {\n  deprecationWarning(\n    \"createOsmBuildings\",\n    \"createOsmBuildings was deprecated in CesiumJS 1.104.  It will be in CesiumJS 1.107.  Use createOsmBuildingsAsync instead.\"\n  );\n\n  options = combine(options, {\n    url: IonResource.fromAssetId(96188),\n  });\n\n  const tileset = new Cesium3DTileset(options);\n\n  let style = options.style;\n\n  if (!defined(style)) {\n    const color = defaultValue(\n      options.defaultColor,\n      Color.WHITE\n    ).toCssColorString();\n    style = new Cesium3DTileStyle({\n      color: `Boolean(\\${feature['cesium#color']}) ? color(\\${feature['cesium#color']}) : ${color}`,\n    });\n  }\n\n  tileset.style = style;\n\n  return tileset;\n}\n\nexport default createOsmBuildings;\n"],"names":["id","_createElementBlock","_hoisted_1","defaultColor","Color","defaultGlowPower","defaultTaperPower","PolylineGlowMaterialProperty","options","defaultValue","this","_definitionChanged","Event","_color","undefined","_colorSubscription","_glowPower","_glowPowerSubscription","_taperPower","_taperPowerSubscription","color","glowPower","taperPower","Object","defineProperties","prototype","isConstant","get","Property","_glow","definitionChanged","createPropertyDescriptor","getType","time","getValue","result","defined","equals","other","mounted","init","methods","viewer","Cesium","resolutionScale","window","devicePixelRatio","scene","postProcessStages","fxaa","enabled","primitives","add","positions","property","i","length","position","longitude","latitude","height","clock","startTime","addSample","entity","entities","name","path","leadTime","trailTime","resolution","width","material","camera","flyPath","duration","pitchAdjustHeight","maxPitch","onComplete","shouldAnimate","__exports__","render","createOsmBuildings","deprecationWarning","combine","url","IonResource","tileset","Cesium3DTileset","style","toCssColorString","Cesium3DTileStyle"],"sourceRoot":""}