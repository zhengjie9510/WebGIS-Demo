{"version":3,"file":"js/619.5b4a463a.js","mappings":"qOACOA,MAAM,a,UAAYC,EAAAA,EAAAA,GAAwB,UAAhBC,GAAG,KAAG,W,GAAdC,G,0CAAvBC,EAAAA,EAAAA,IAAqD,MAArDC,EAAqD,E,yBAMvD,GACEC,UACEC,KAAKC,MACP,EACAC,QAAS,CACPD,OACE,MAAME,EAASC,SAASC,cAAc,MAChCC,EAAS,IAAIC,EAAAA,IAEbC,EAAQ,IAAID,EAAAA,IACZE,EAAS,IAAIF,EAAAA,IAAwB,GAAIJ,EAAOO,YAAcP,EAAOQ,aAAc,GAAK,KAC9FF,EAAOG,SAASC,EAAI,EACpBL,EAAMM,IAAIL,GAEV,MAAMM,EAAW,IAAIR,EAAAA,IAAoB,CAAEJ,OAAQA,EAAQa,WAAW,IACtED,EAASE,QAAQd,EAAOe,WAAYf,EAAOgB,aAC3CJ,EAASK,cAAcC,OAAOC,kBAE9B,MAAMC,EAAW,IAAIC,EAAAA,EAAcf,EAAQM,EAASU,YAG9CC,EAAe,IAAInB,EAAAA,IAAmB,SAAU,IACtDC,EAAMM,IAAIY,GAEV,MAAMC,EAAe,IAAIpB,EAAAA,IAAiB,SAAU,IAEpDoB,EAAaf,SAASgB,IAAI,EAAG,EAAG,IAChCpB,EAAMM,IAAIa,GAEV,MAAME,EAAW,IAAItB,EAAAA,IAAoB,EAAG,GACtCuB,EAAW,IAAIvB,EAAAA,IAAwB,CAC3CwB,IAAKzB,EAAO0B,KAAK,8BACjBC,UAAW3B,EAAO0B,KAAK,qCACvBE,KAAM3B,EAAAA,MAEF4B,EAAO,IAAI5B,EAAAA,IAAWsB,EAAUC,GAItC,SAASM,IACP,GAAIC,EAA4BtB,GAAW,CACzC,MAAMZ,EAASY,EAASU,WACxBhB,EAAO6B,OAASnC,EAAOO,YAAcP,EAAOQ,aAC5CF,EAAO8B,wBACT,CAEAJ,EAAKK,QAAQ,KACbjB,EAASkB,SACT1B,EAAS2B,OAAOlC,EAAOC,GACvBkC,sBAAsBP,EACxB,CAEA,SAASC,EAA4BtB,GACnC,MAAMZ,EAASY,EAASU,WAClBmB,EAAQzC,EAAOO,YACfmC,EAAS1C,EAAOQ,aAChBmC,EAAa3C,EAAOyC,QAAUA,GAASzC,EAAO0C,SAAWA,EAI/D,OAHIC,GACF/B,EAASE,QAAQ2B,EAAOC,GAAQ,GAE3BC,CACT,CAzBAtC,EAAMM,IAAIqB,GAEVC,GAwBF,I,QC9DJ,MAAMW,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASL,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://webgis/./src/components/three/normal_mapping.vue","webpack://webgis/./src/components/three/normal_mapping.vue?e7ca"],"sourcesContent":["<template>\r\n  <div class=\"container\"><canvas id=\"c\"></canvas></div>\r\n</template>\r\n<script>\r\nimport * as THREE from 'three'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\nexport default {\r\n  mounted() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    init() {\r\n      const canvas = document.querySelector('#c')\r\n      const loader = new THREE.TextureLoader()\r\n\r\n      const scene = new THREE.Scene()\r\n      const camera = new THREE.PerspectiveCamera(45, canvas.clientWidth / canvas.clientHeight, 0.1, 1000)\r\n      camera.position.z = 5\r\n      scene.add(camera)\r\n\r\n      const renderer = new THREE.WebGLRenderer({ canvas: canvas, antialias: true });\r\n      renderer.setSize(canvas.innerWidth, canvas.innerHeight)\r\n      renderer.setPixelRatio(window.devicePixelRatio)\r\n\r\n      const controls = new OrbitControls(camera, renderer.domElement);\r\n\r\n      // set ambientlight\r\n      const ambientlight = new THREE.AmbientLight(0xffffff, 0.2);\r\n      scene.add(ambientlight);\r\n      // set point light\r\n      const pointerlight = new THREE.PointLight(0xffffff, 0.9);\r\n      // set light position\r\n      pointerlight.position.set(5, 3, 10);\r\n      scene.add(pointerlight);\r\n\r\n      const geometry = new THREE.PlaneGeometry(2, 2);\r\n      const material = new THREE.MeshPhongMaterial({\r\n        map: loader.load('./SampleData/brickwall.jpg'),\r\n        normalMap: loader.load('./SampleData/brickwall_normal.jpg'),\r\n        side: THREE.DoubleSide\r\n      });\r\n      const mesh = new THREE.Mesh(geometry, material);\r\n      scene.add(mesh);\r\n\r\n      animate();\r\n      function animate() {\r\n        if (resizeRendererToDisplaySize(renderer)) {\r\n          const canvas = renderer.domElement\r\n          camera.aspect = canvas.clientWidth / canvas.clientHeight\r\n          camera.updateProjectionMatrix()\r\n        }\r\n\r\n        mesh.rotateY(0.01)\r\n        controls.update();\r\n        renderer.render(scene, camera);\r\n        requestAnimationFrame(animate);\r\n      }\r\n\r\n      function resizeRendererToDisplaySize(renderer) {\r\n        const canvas = renderer.domElement\r\n        const width = canvas.clientWidth\r\n        const height = canvas.clientHeight\r\n        const needResize = canvas.width !== width || canvas.height !== height\r\n        if (needResize) {\r\n          renderer.setSize(width, height, false)\r\n        }\r\n        return needResize\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.container {\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n#c {\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  margin: 0%;\r\n}\r\n</style>\r\n","import { render } from \"./normal_mapping.vue?vue&type=template&id=72a76e1e&scoped=true\"\nimport script from \"./normal_mapping.vue?vue&type=script&lang=js\"\nexport * from \"./normal_mapping.vue?vue&type=script&lang=js\"\n\nimport \"./normal_mapping.vue?vue&type=style&index=0&id=72a76e1e&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\Documents\\\\GitHub\\\\webgis\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-72a76e1e\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","id","_hoisted_2","_createElementBlock","_hoisted_1","mounted","this","init","methods","canvas","document","querySelector","loader","THREE","scene","camera","clientWidth","clientHeight","position","z","add","renderer","antialias","setSize","innerWidth","innerHeight","setPixelRatio","window","devicePixelRatio","controls","OrbitControls","domElement","ambientlight","pointerlight","set","geometry","material","map","load","normalMap","side","mesh","animate","resizeRendererToDisplaySize","aspect","updateProjectionMatrix","rotateY","update","render","requestAnimationFrame","width","height","needResize","__exports__"],"sourceRoot":""}