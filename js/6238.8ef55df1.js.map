{"version":3,"file":"js/6238.8ef55df1.js","mappings":"kLACOA,GAAG,mB,0CAARC,EAAAA,EAAAA,IAAgC,MAAhCC,E,0HAOF,GACEC,UACEC,KAAKC,MACP,EACAC,QAAS,CACPD,OACE,IAAIE,EAAS,IAAIC,EAAAA,EAAc,mBAC3BA,EAAAA,EAAAA,oCAEFD,EAAOE,gBAAkBC,OAAOC,kBAElCJ,EAAOK,MAAMC,kBAAkBC,KAAKC,SAAU,EAC9C,MAAMC,EAAuB,krBAmB7BT,EAAOK,MAAMK,WAAWC,IACtB,IAAIV,EAAAA,EAAiB,CACnBW,kBAAmBf,KAAKgB,oBAAoB,CAAC,QAAS,QAAS,KAC/DC,WAAY,IAAIb,EAAAA,EAAkC,CAChDc,SAAU,IAAId,EAAAA,EAAgB,CAC5Be,OAAQ,CACNC,SAAU,CACRC,MAAO,IAAIjB,EAAAA,EAAa,EAAK,GAAK,EAAK,IACvCkB,MAAO,EACPC,QAAS,GACTC,SAAU,GAEZC,OAAQb,OAIdc,cAAc,KAGlB,MAAMC,EAASvB,EAAAA,EAAAA,YAA8B,QAAS,QACtDD,EAAOyB,OAAOC,OAAOF,EAAQ,IAAIvB,EAAAA,EAAkB,GAAM,IAAS,OAClED,EAAOyB,OAAOE,gBAAgB1B,EAAAA,EAAAA,SAChC,EAOAY,oBAAqB,SAAUW,EAAQI,GACrC,IAAIhB,EAAoB,GACxB,IAAK,IAAIiB,EAAI,EAAGA,EAAID,EAAKC,IAAK,CAC5B,IAAIC,EAAMN,EAAO,GAA6B,IAAvBO,KAAKC,SAAW,IACnCC,EAAMT,EAAO,GAA6B,IAAvBO,KAAKC,SAAW,IACvC,MAAME,EAAW,IAAIjC,EAAAA,EAAwB,CAC3CkC,UAAWlC,EAAAA,EAAAA,wBAA0C,CACnD6B,EAAKG,EAAK,EAAGH,EAAKG,EAAK,IAAOF,KAAKC,WAErCI,MAAO,IAEHC,EAAW,IAAIpC,EAAAA,EAAwB,CAAEiC,SAAUA,IACzDtB,EAAkB0B,KAAKD,EACzB,CACA,OAAOzB,CACT,I,WC5EJ,MAAM2B,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://webgis/./src/components/public/vertical_trail_line.vue","webpack://webgis/./src/components/public/vertical_trail_line.vue?41ea"],"sourcesContent":["<template>\n  <div id=\"cesiumContainer\"></div>\n</template>\n\n<script>\nimport 'cesium/Build/Cesium/Widgets/widgets.css'\nimport * as Cesium from 'cesium'\n// 定义材质 结束\nexport default {\n  mounted() {\n    this.init()\n  },\n  methods: {\n    init() {\n      var viewer = new Cesium.Viewer('cesiumContainer')\n      if (Cesium.FeatureDetection.supportsImageRenderingPixelated()) {\n        //判断是否支持图像渲染像素化处理\n        viewer.resolutionScale = window.devicePixelRatio\n      }\n      viewer.scene.postProcessStages.fxaa.enabled = true\n      const fragmentShaderSource = `\n        uniform vec4 color;\n        uniform float speed;\n        uniform float percent;\n        uniform float gradient;\n        \n        czm_material czm_getMaterial(czm_materialInput materialInput){\n          czm_material material = czm_getDefaultMaterial(materialInput);\n          vec2 st = materialInput.st;\n          float t = fract(czm_frameNumber * speed / 1000.0);\n          t *= (1.0 + percent);\n          float alpha = smoothstep(t- percent, t, st.s) * step(-t, -st.s);\n          alpha += gradient;\n          material.diffuse = color.rgb;\n          material.alpha = alpha;\n          material.emission = vec3(0.7);\n          return material;\n        }\n        `\n      viewer.scene.primitives.add(\n        new Cesium.Primitive({\n          geometryInstances: this.generateRandomLines([104.065, 30.659], 100),\n          appearance: new Cesium.PolylineMaterialAppearance({\n            material: new Cesium.Material({\n              fabric: {\n                uniforms: {\n                  color: new Cesium.Color(1.0, 0.5, 0.0, 0.5),\n                  speed: 5.0,\n                  percent: 0.2,\n                  gradient: 0.00\n                },\n                source: fragmentShaderSource\n              },\n            }),\n          }),\n          allowPicking: false\n        })\n      )\n      const center = Cesium.Cartesian3.fromDegrees(104.065, 30.659);\n      viewer.camera.lookAt(center, new Cesium.Cartesian3(0.0, -10000.0, 3930.0));\n      viewer.camera.lookAtTransform(Cesium.Matrix4.IDENTITY);\n    },\n    /**\n     * @description: 产生随机线\n     * @param center：中心点坐标\n     * @param num：随机线数量\n     * @return 返回线\n     */\n    generateRandomLines: function (center, num) {\n      let geometryInstances = []\n      for (let i = 0; i < num; i++) {\n        let lon = center[0] + (Math.random() - 0.5) * 0.1;\n        let lat = center[1] + (Math.random() - 0.5) * 0.1;\n        const geometry = new Cesium.PolylineGeometry({\n          positions: Cesium.Cartesian3.fromDegreesArrayHeights([\n            lon, lat, 0, lon, lat, 5000 * Math.random()\n          ]),\n          width: 1.0,\n        })\n        const instance = new Cesium.GeometryInstance({ geometry: geometry })\n        geometryInstances.push(instance)\n      }\n      return geometryInstances\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n#cesiumContainer {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n}\n</style>\n","import { render } from \"./vertical_trail_line.vue?vue&type=template&id=38747462&scoped=true\"\nimport script from \"./vertical_trail_line.vue?vue&type=script&lang=js\"\nexport * from \"./vertical_trail_line.vue?vue&type=script&lang=js\"\n\nimport \"./vertical_trail_line.vue?vue&type=style&index=0&id=38747462&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/zhengjie/Documents/webgis/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-38747462\"]])\n\nexport default __exports__"],"names":["id","_createElementBlock","_hoisted_1","mounted","this","init","methods","viewer","Cesium","resolutionScale","window","devicePixelRatio","scene","postProcessStages","fxaa","enabled","fragmentShaderSource","primitives","add","geometryInstances","generateRandomLines","appearance","material","fabric","uniforms","color","speed","percent","gradient","source","allowPicking","center","camera","lookAt","lookAtTransform","num","i","lon","Math","random","lat","geometry","positions","width","instance","push","__exports__","render"],"sourceRoot":""}