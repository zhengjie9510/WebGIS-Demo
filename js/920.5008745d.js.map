{"version":3,"file":"js/920.5008745d.js","mappings":"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","sources":["webpack://webgis/./src/components/three/rain_cloud.vue","webpack://webgis/./src/components/three/rain_cloud.vue?5c7b"],"sourcesContent":["<template>\r\n  <div class=\"container\"><canvas id=\"c\"></canvas></div>\r\n</template>\r\n<script>\r\nimport * as THREE from 'three'\r\nconst img = 'SampleData/smoke.png'\r\nexport default {\r\n  mounted() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    init() {\r\n      const scene = new THREE.Scene()\r\n      scene.fog = new THREE.FogExp2(0x11111f, 0.002)\r\n\r\n      const canvas = document.querySelector('#c')\r\n      const renderer = new THREE.WebGLRenderer({ canvas })\r\n      renderer.setClearColor(scene.fog.color)\r\n      renderer.setSize(canvas.innerWidth, canvas.innerHeight)\r\n      renderer.setPixelRatio(window.devicePixelRatio)\r\n\r\n      const camera = new THREE.PerspectiveCamera(\r\n        60,\r\n        canvas.clientWidth / canvas.clientHeight,\r\n        1,\r\n        1000\r\n      )\r\n      camera.position.z = 1\r\n      camera.rotation.x = 1.16\r\n      camera.rotation.y = -0.12\r\n      camera.rotation.z = 0.27\r\n\r\n      const ambient = new THREE.AmbientLight(0x555555)\r\n      scene.add(ambient)\r\n\r\n      const directionalLight = new THREE.DirectionalLight(0xffeedd)\r\n      directionalLight.position.set(0, 0, 1)\r\n      scene.add(directionalLight)\r\n\r\n      const flash = new THREE.PointLight(0xffffff, 30, 500, 1.7)\r\n      flash.position.set(200, 300, 100)\r\n      scene.add(flash)\r\n\r\n      const rainGeo = new THREE.BufferGeometry()\r\n      const pointsArray = new Array()\r\n      const rainCount = 15000\r\n      for (let i = 0; i < rainCount; i++) {\r\n        const rainDrop = new THREE.Vector3(\r\n          Math.random() * 400 - 200,\r\n          Math.random() * 500 - 250,\r\n          Math.random() * 400 - 200\r\n        )\r\n        rainDrop.velocity = 0\r\n        pointsArray.push(rainDrop)\r\n      }\r\n      rainGeo.setFromPoints(pointsArray)\r\n      const rainMaterial = new THREE.PointsMaterial({\r\n        color: 0xaaaaaa,\r\n        size: 0.1,\r\n        transparent: true,\r\n      })\r\n      const rain = new THREE.Points(rainGeo, rainMaterial)\r\n      scene.add(rain)\r\n\r\n      const cloudParticles = []\r\n      let loader = new THREE.TextureLoader()\r\n      loader.load(\r\n        img,\r\n        function(texture) {\r\n          const cloudGeo = new THREE.PlaneBufferGeometry(500, 500)\r\n          const cloudMaterial = new THREE.MeshLambertMaterial({\r\n            map: texture,\r\n            transparent: true,\r\n          })\r\n          for (let p = 0; p < 25; p++) {\r\n            let cloud = new THREE.Mesh(cloudGeo, cloudMaterial)\r\n            cloud.position.set(\r\n              Math.random() * 800 - 400,\r\n              500,\r\n              Math.random() * 500 - 450\r\n            )\r\n            cloud.rotation.x = 1.16\r\n            cloud.rotation.y = -0.12\r\n            cloud.rotation.z = Math.random() * 360\r\n            cloud.material.opacity = 0.6\r\n            cloudParticles.push(cloud)\r\n            scene.add(cloud)\r\n          }\r\n          animate()\r\n        },\r\n        () => {},\r\n        (err) => {\r\n          console.error(err)\r\n        }\r\n      )\r\n      function resizeRendererToDisplaySize(renderer) {\r\n        const canvas = renderer.domElement\r\n        const width = canvas.clientWidth\r\n        const height = canvas.clientHeight\r\n        const needResize = canvas.width !== width || canvas.height !== height\r\n        if (needResize) {\r\n          renderer.setSize(width, height, false)\r\n        }\r\n        return needResize\r\n      }\r\n\r\n      function animate() {\r\n        if (resizeRendererToDisplaySize(renderer)) {\r\n          const canvas = renderer.domElement\r\n          camera.aspect = canvas.clientWidth / canvas.clientHeight\r\n          camera.updateProjectionMatrix()\r\n        }\r\n\r\n        cloudParticles.forEach((p) => {\r\n          p.rotation.z -= 0.002\r\n        })\r\n        pointsArray.forEach((p) => {\r\n          p.velocity -= 0.1 + Math.random() * 0.1\r\n          p.y += p.velocity\r\n          if (p.y < -200) {\r\n            p.y = 200\r\n            p.velocity = 0\r\n          }\r\n        })\r\n        rainGeo.setFromPoints(pointsArray)\r\n        rain.rotation.y += 0.002\r\n        if (Math.random() > 0.93 || flash.power > 100) {\r\n          if (flash.power < 100)\r\n            flash.position.set(\r\n              Math.random() * 400,\r\n              300 + Math.random() * 200,\r\n              100\r\n            )\r\n          flash.power = 50 + Math.random() * 500\r\n        }\r\n        renderer.render(scene, camera)\r\n        requestAnimationFrame(animate)\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.container {\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n#c {\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  margin: 0%;\r\n}\r\n</style>\r\n","import { render } from \"./rain_cloud.vue?vue&type=template&id=4193adc0&scoped=true\"\nimport script from \"./rain_cloud.vue?vue&type=script&lang=js\"\nexport * from \"./rain_cloud.vue?vue&type=script&lang=js\"\n\nimport \"./rain_cloud.vue?vue&type=style&index=0&id=4193adc0&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\Documents\\\\GitHub\\\\webgis\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4193adc0\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","id","_hoisted_2","_createElementBlock","_hoisted_1","img","mounted","this","init","methods","scene","THREE","fog","canvas","document","querySelector","renderer","setClearColor","color","setSize","innerWidth","innerHeight","setPixelRatio","window","devicePixelRatio","camera","clientWidth","clientHeight","position","z","rotation","x","y","ambient","add","directionalLight","set","flash","rainGeo","pointsArray","Array","rainCount","i","rainDrop","Math","random","velocity","push","setFromPoints","rainMaterial","size","transparent","rain","cloudParticles","loader","resizeRendererToDisplaySize","domElement","width","height","needResize","animate","aspect","updateProjectionMatrix","forEach","p","power","render","requestAnimationFrame","load","texture","cloudGeo","cloudMaterial","map","cloud","material","opacity","err","console","error","__exports__"],"sourceRoot":""}