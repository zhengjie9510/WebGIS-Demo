{"version":3,"file":"js/708.4e0a3892.js","mappings":"iLACOA,GAAG,mB,0CAARC,EAAAA,EAAAA,IAAgC,MAAhCC,E,mHAQF,MAAMC,EACJC,YAAYC,GACVC,KAAKC,MAAQ,IAAIC,EAAAA,EAAwB,aACzCF,KAAKG,YAASC,EACdJ,KAAKK,YAASD,EACdJ,KAAKM,iBAAcF,EACnBJ,KAAKO,aAAUH,CACjB,CAKAI,WAAWC,GACJT,KAAKO,UACRP,KAAKO,QAAU,IAAIL,EAAAA,EAA+BO,EAAOC,MAAMC,SAGjEX,KAAKO,QAAQK,gBAAgBC,IAC3B,MAAMC,EAAgBd,KAAKe,YAAYN,EAAQI,EAAMG,UACrD,GAAId,EAAAA,EAAeY,IACqB,IAAlCd,KAAKiB,kBAAkBC,OAAc,CACvClB,KAAKG,OAASW,EACd,MAAMT,EAAS,IAAIH,EAAAA,GAAwB,IAClCA,EAAAA,EAAAA,SAA2BF,KAAKG,OAAQW,KAC9C,GACHd,KAAKM,YAAcN,KAAKmB,WAAWnB,KAAKG,OAAQE,EAClD,CACF,GACCH,EAAAA,EAAAA,YAEHF,KAAKO,QAAQK,gBAAgBQ,IAC3B,GAAIpB,KAAKiB,kBAAkBC,QAAU,EAAG,CACtC,MAAMJ,EAAgBd,KAAKe,YAAYN,EAAQW,EAAKC,aAChDnB,EAAAA,EAAeY,IACjBQ,QAAQC,IAAI,OAEhB,IACCrB,EAAAA,EAAAA,YAEHF,KAAKO,QAAQK,gBAAgBC,OAE1BX,EAAAA,EAAAA,YACL,CAOAa,YAAYN,EAAQO,GAClB,IAAIF,EAEJ,GAAIL,EAAOe,2BAA2BtB,EAAAA,EACpCY,EAAgBL,EAAOC,MAAMe,OAAOC,cAAcV,OAG/C,CACH,MAAMW,EAAMlB,EAAOgB,OAAOG,WAAWZ,GACrCF,EAAgBL,EAAOC,MAAMmB,MAAMC,KAAKH,EAAKlB,EAAOC,MACtD,CACA,OAAOI,CACT,CAOAK,WAAWhB,EAAQE,GACjB,OAAOL,KAAKC,MAAM8B,SAASC,IAAI,CAC7BhB,SAAUd,EAAAA,EAAAA,aAA+B,IAAO,IAChD+B,QAAS,CACPC,cAAe,KACfC,cAAe,IACfC,SAAUlC,EAAAA,EAAAA,IAAAA,UAA2B,MAG3C,CAKAmC,SAAS5B,GACPA,EAAO6B,YAAYN,IAAIhC,KAAKC,MAC9B,EAEF,OACEsC,UACEvC,KAAKwC,MACP,EACAC,QAAS,CACPD,OACE,MAAM/B,EAAS,IAAIP,EAAAA,EAAc,mBAC7BA,EAAAA,EAAAA,oCAEFO,EAAOiC,gBAAkBC,OAAOC,kBAElCnC,EAAOC,MAAMmC,kBAAkBC,KAAKC,SAAU,EAC9CtC,EAAOC,MAAMsC,0BAA2B,EAExC,MAAM7B,EAAa,IAAItB,EACvBsB,EAAWX,WAAWC,GACtBU,EAAWkB,SAAS5B,EACtB,I,WCzGJ,MAAMwC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://webgis/./src/components/public/draw_circle.vue","webpack://webgis/./src/components/public/draw_circle.vue?a293"],"sourcesContent":["<template>\r\n  <div id=\"cesiumContainer\"></div>\r\n</template>\r\n\r\n<script>\r\nimport 'cesium/Build/Cesium/Widgets/widgets.css'\r\nimport * as Cesium from 'cesium'\r\nimport { useDelayedRender } from 'element-plus'\r\n\r\nclass DrawCircle {\r\n  constructor(options) {\r\n    this.layer = new Cesium.CustomDataSource('MyCircles')\r\n    this.center = undefined\r\n    this.radius = undefined\r\n    this.activeShape = undefined\r\n    this.handler = undefined\r\n  }\r\n  /**\r\n   * 添加鼠标点击事件\r\n   * @param {Cesium.Viewer} viewer 目标地图\r\n   */\r\n  bindAction(viewer) {\r\n    if (!this.handler) {\r\n      this.handler = new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);\r\n    }\r\n    // 鼠标左键单击画点\r\n    this.handler.setInputAction((click) => {\r\n      const earthPosition = this.getPosition(viewer, click.position)\r\n      if (Cesium.defined(earthPosition)) {\r\n        if (this.activeShapePoints.length === 0) {\r\n          this.center = earthPosition\r\n          const radius = new Cesium.CallbackProperty(() => {\r\n            return Cesium.Cartesian3.distance(this.center, earthPosition);\r\n          }, false);\r\n          this.activeShape = this.drawCircle(this.center, radius)\r\n        }\r\n      }\r\n    }, Cesium.ScreenSpaceEventType.LEFT_CLICK)\r\n    // 鼠标移动\r\n    this.handler.setInputAction((move) => {\r\n      if (this.activeShapePoints.length >= 2) {\r\n        const earthPosition = this.getPosition(viewer, move.endPosition)\r\n        if (Cesium.defined(earthPosition)) {\r\n          console.log(\"haha\")\r\n        }\r\n      }\r\n    }, Cesium.ScreenSpaceEventType.MOUSE_MOVE)\r\n    // 单击鼠标右键结束画线\r\n    this.handler.setInputAction((click) => {\r\n\r\n    }, Cesium.ScreenSpaceEventType.RIGHT_CLICK)\r\n  }\r\n  /**\r\n   * 添加鼠标点击事件的位置\r\n   * @param {Cesium.Viewer} viewer 目标地图\r\n   * @param {Cesium.Cartesian2} position 鼠标位置\r\n   * @return {Cesium.Cartesian3} 鼠标点击位置的坐标\r\n   */\r\n  getPosition(viewer, position) {\r\n    let earthPosition = undefined\r\n    // 球面\r\n    if (viewer.terrainProvider instanceof Cesium.EllipsoidTerrainProvider) {\r\n      earthPosition = viewer.scene.camera.pickEllipsoid(position);\r\n    }\r\n    // 地形\r\n    else {\r\n      const ray = viewer.camera.getPickRay(position);\r\n      earthPosition = viewer.scene.globe.pick(ray, viewer.scene);\r\n    }\r\n    return earthPosition\r\n  }\r\n  /**\r\n   * 画线\r\n   * @param {Cesium.Cartesian3} center 中心点坐标\r\n   * @param {number} radius 半径\r\n   * @return {Cesium.Entity} 圆实体\r\n   */\r\n  drawCircle(center, radius) {\r\n    return this.layer.entities.add({\r\n      position: Cesium.Cartesian3.fromDegrees(-103.0, 40.0),\r\n      ellipse: {\r\n        semiMinorAxis: 250000.0,\r\n        semiMajorAxis: 400000.0,\r\n        material: Cesium.Color.RED.withAlpha(0.5),\r\n      },\r\n    });\r\n  }\r\n  /**\r\n   * 添加图层\r\n   * @param {Cesium.Viewer} viewer 目标地图\r\n   */\r\n  addToMap(viewer) {\r\n    viewer.dataSources.add(this.layer);\r\n  }\r\n}\r\nexport default {\r\n  mounted() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    init() {\r\n      const viewer = new Cesium.Viewer('cesiumContainer')\r\n      if (Cesium.FeatureDetection.supportsImageRenderingPixelated()) {\r\n        //判断是否支持图像渲染像素化处理\r\n        viewer.resolutionScale = window.devicePixelRatio\r\n      }\r\n      viewer.scene.postProcessStages.fxaa.enabled = true\r\n      viewer.scene.debugShowFramesPerSecond = true // 显示帧率\r\n\r\n      const drawCircle = new DrawCircle()\r\n      drawCircle.bindAction(viewer)\r\n      drawCircle.addToMap(viewer)\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#cesiumContainer {\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n</style>\r\n","import { render } from \"./draw_circle.vue?vue&type=template&id=c1b32e98&scoped=true\"\nimport script from \"./draw_circle.vue?vue&type=script&lang=js\"\nexport * from \"./draw_circle.vue?vue&type=script&lang=js\"\n\nimport \"./draw_circle.vue?vue&type=style&index=0&id=c1b32e98&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\Documents\\\\GitHub\\\\webgis\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-c1b32e98\"]])\n\nexport default __exports__"],"names":["id","_createElementBlock","_hoisted_1","DrawCircle","constructor","options","this","layer","Cesium","center","undefined","radius","activeShape","handler","bindAction","viewer","scene","canvas","setInputAction","click","earthPosition","getPosition","position","activeShapePoints","length","drawCircle","move","endPosition","console","log","terrainProvider","camera","pickEllipsoid","ray","getPickRay","globe","pick","entities","add","ellipse","semiMinorAxis","semiMajorAxis","material","addToMap","dataSources","mounted","init","methods","resolutionScale","window","devicePixelRatio","postProcessStages","fxaa","enabled","debugShowFramesPerSecond","__exports__","render"],"sourceRoot":""}