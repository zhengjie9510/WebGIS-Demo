{"version":3,"file":"js/4100.fb50aa09.js","mappings":"kLACOA,GAAG,mB,0CAARC,EAAAA,EAAAA,IAAgC,MAAhCC,E,+MAOF,MAAMC,EAIJC,YAAYC,GACVC,KAAKC,aAAeF,CACtB,CAOAG,kBAAkBC,GAEhB,MAAMC,EAAY,IAAIC,aAAa,CACjC,IAAO,IAAO,KACb,KAAQ,IAAO,IAChB,KAAQ,IAAO,MAEXC,EAAW,IAAIC,EAAAA,EAAgB,CACnCC,WAAY,CACVC,SAAU,IAAIF,EAAAA,EAAyB,CACrCG,kBAAmBH,EAAAA,EAAAA,MACnBI,uBAAwB,EACxBC,OAAQR,KAGZS,QAAS,CAAC,EAAG,EAAG,GAChBC,cAAeP,EAAAA,EAAAA,MACfQ,eAAgBR,EAAAA,EAAAA,aAAmCH,KAG/CY,EAAcT,EAAAA,EAAAA,aAAgC,CAClDJ,QAASA,EACTG,SAAUA,EACVW,mBAAoB,CAClBR,SAAU,GAEZS,YAAaX,EAAAA,EAAAA,cAGf,OAAOS,CACT,CAWAG,oBAAoBhB,GAClB,MAAMc,EAAqB,CACzB,SAAY,GAGRG,EAAmB,6NAQnBC,EAAqB,sHAMrBC,EAAUf,EAAAA,EAAAA,UAA+B,CAC7CJ,QAASA,EACToB,mBAAoBH,EACpBI,qBAAsBH,EACtBJ,mBAAoBA,IAEtB,OAAOK,CACT,CAOAG,cAActB,GACZ,MAAMa,EAAchB,KAAKE,kBAAkBC,GACrCmB,EAAUtB,KAAKmB,oBAAoBhB,GACnCuB,EAAcnB,EAAAA,EAAAA,UAA6B,CAC/CoB,UAAW,CACTC,SAAS,KAGPC,EAAa,CACjBC,UACE,OAAOvB,EAAAA,EAAAA,GACT,GAEIwB,EAAU,IAAIxB,EAAAA,EAAmB,CACrCR,YAAaC,KAAKC,aAClBe,YAAaA,EACbgB,cAAeV,EACfO,WAAYA,EACZH,YAAaA,EACbO,KAAM1B,EAAAA,EAAAA,SAER,OAAOwB,CACT,CAKAG,OAAOC,GACL,MAAMJ,EAAU/B,KAAKyB,cAAcU,EAAWhC,SAC9CgC,EAAWC,YAAYC,KAAKN,EAC9B,EAGF,OACEO,UACEtC,KAAKuC,MACP,EACAC,QAAS,CACPD,OACE,IAAIE,EAAS,IAAIlC,EAAAA,EAAc,mBAC3BA,EAAAA,EAAAA,oCAEFkC,EAAOC,gBAAkBC,OAAOC,kBAElCH,EAAOI,MAAMC,MAAMC,yBAA0B,EAE7C,MAAMC,EAAczC,EAAAA,EAAAA,YAA8B,IAAK,GAAI,GACrDR,EAAcQ,EAAAA,EAAAA,wBAA0CyC,GAC9DP,EAAOI,MAAMI,WAAWC,IAAI,IAAIrD,EAAkBE,IAClD0C,EAAOU,OAAOC,QAAQ,CACpBC,YAAa9C,EAAAA,EAAAA,YAA8B,IAAK,GAAI,MAExD,I,WC5IJ,MAAM+C,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://webgis/./src/components/public/custom_primitive.vue","webpack://webgis/./src/components/public/custom_primitive.vue?11bb"],"sourcesContent":["<template>\n  <div id=\"cesiumContainer\"></div>\n</template>\n\n<script>\nimport 'cesium/Build/Cesium/Widgets/widgets.css'\nimport * as Cesium from 'cesium'\n\nclass TrianglePrimitive {\n  /**\n   * @param {Cesium.Matrix4} modelMatrix matrix to WorldCoordinateSystem\n   */\n  constructor(modelMatrix) {\n    this._modelMatrix = modelMatrix\n  }\n\n  /**\n   * Creates a vertex array for rendering the CPU wind.\n   * @param {Cesium.Context} context - The Cesium rendering context.\n   * @returns {Cesium.VertexArray} The created vertex array.\n   */\n  createVertexArray(context) {\n\n    const positions = new Float32Array([\n      10000, 50000, 5000,\n      -20000, -10000, 5000,\n      50000, -30000, 5000,\n    ])\n    const geometry = new Cesium.Geometry({\n      attributes: {\n        position: new Cesium.GeometryAttribute({\n          componentDatatype: Cesium.ComponentDatatype.FLOAT,\n          componentsPerAttribute: 3,\n          values: positions,\n        }),\n      },\n      indices: [0, 1, 2],\n      primitiveType: Cesium.PrimitiveType.LINES,\n      boundingSphere: Cesium.BoundingSphere.fromVertices(positions),\n    })\n\n    const vertexArray = Cesium.VertexArray.fromGeometry({\n      context: context,\n      geometry: geometry,\n      attributeLocations: {\n        position: 0,\n      },\n      bufferUsage: Cesium.BufferUsage.STATIC_DRAW\n    })\n\n    return vertexArray\n  }\n\n  /**\n   * Creates a draw command for rendering the CPU wind.\n   * @param {Cesium.Context} context - The Cesium rendering context.\n   * @returns {Cesium.ShaderProgram} The created shader program.\n   */\n  /**\n   * Creates a draw command for rendering the CPU wind.\n   * @param {Cesium.Context} context - The Cesium rendering context.\n   */\n  createShaderProgram(context) {\n    const attributeLocations = {\n      \"position\": 0,\n    }\n\n    const vertexShaderText = `\n      in vec3 position;\n      void main() {\n          vec4 position = czm_projection * czm_view * czm_model * vec4(position, 1.0);\n          gl_PointSize = 10.0;\n          gl_Position = position;\n      }\n      `\n    const fragmentShaderText = `\n      uniform vec3 u_color;\n      void main() {\n          out_FragColor =  vec4(u_color, 1.0);\n      }\n      `\n    const program = Cesium.ShaderProgram.fromCache({\n      context: context,\n      vertexShaderSource: vertexShaderText,\n      fragmentShaderSource: fragmentShaderText,\n      attributeLocations: attributeLocations,\n    })\n    return program\n  }\n\n  /**\n   * Creates a draw command for rendering CPU wind.\n   * @param {Object} context - The context object.\n   * @returns {Cesium.DrawCommand} - The draw command.\n   */\n  createCommand(context) {\n    const vertexArray = this.createVertexArray(context)\n    const program = this.createShaderProgram(context)\n    const renderState = Cesium.RenderState.fromCache({\n      depthTest: {\n        enabled: true\n      }\n    })\n    const uniformMap = {\n      u_color() {\n        return Cesium.Color.RED\n      },\n    }\n    const command = new Cesium.DrawCommand({\n      modelMatrix: this._modelMatrix,\n      vertexArray: vertexArray,\n      shaderProgram: program,\n      uniformMap: uniformMap,\n      renderState: renderState,\n      pass: Cesium.Pass.OPAQUE,\n    })\n    return command\n  }\n\n  /**\n   * @param {Cesium.FrameState} frameState\n   */\n  update(frameState) {\n    const command = this.createCommand(frameState.context)\n    frameState.commandList.push(command)\n  }\n}\n\nexport default {\n  mounted() {\n    this.init()\n  },\n  methods: {\n    init() {\n      var viewer = new Cesium.Viewer('cesiumContainer')\n      if (Cesium.FeatureDetection.supportsImageRenderingPixelated()) {\n        //判断是否支持图像渲染像素化处理\n        viewer.resolutionScale = window.devicePixelRatio\n      }\n      viewer.scene.globe.depthTestAgainstTerrain = true\n\n      const modelCenter = Cesium.Cartesian3.fromDegrees(112, 23, 0)\n      const modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(modelCenter)\n      viewer.scene.primitives.add(new TrianglePrimitive(modelMatrix))\n      viewer.camera.setView({\n        destination: Cesium.Cartesian3.fromDegrees(112, 23, 200000),\n      })\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n#cesiumContainer {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n}\n</style>\n","import { render } from \"./custom_primitive.vue?vue&type=template&id=35c88139&scoped=true\"\nimport script from \"./custom_primitive.vue?vue&type=script&lang=js\"\nexport * from \"./custom_primitive.vue?vue&type=script&lang=js\"\n\nimport \"./custom_primitive.vue?vue&type=style&index=0&id=35c88139&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/zhengjie/Documents/webgis/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-35c88139\"]])\n\nexport default __exports__"],"names":["id","_createElementBlock","_hoisted_1","TrianglePrimitive","constructor","modelMatrix","this","_modelMatrix","createVertexArray","context","positions","Float32Array","geometry","Cesium","attributes","position","componentDatatype","componentsPerAttribute","values","indices","primitiveType","boundingSphere","vertexArray","attributeLocations","bufferUsage","createShaderProgram","vertexShaderText","fragmentShaderText","program","vertexShaderSource","fragmentShaderSource","createCommand","renderState","depthTest","enabled","uniformMap","u_color","command","shaderProgram","pass","update","frameState","commandList","push","mounted","init","methods","viewer","resolutionScale","window","devicePixelRatio","scene","globe","depthTestAgainstTerrain","modelCenter","primitives","add","camera","setView","destination","__exports__","render"],"sourceRoot":""}